/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import BUS.CongCu;
import BUS.HoaDon_BUS;
import ConnectDB.XuLyDatabase;
import DTO.ChiTietHoaDon_DTO;
import DTO.HoaDon_DTO;
import com.toedter.calendar.JDateChooser;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.log4j.Logger;
import java.util.Calendar;
import java.util.Date;


/**
 *
 * @author Thanh Phong
 */
public class QuanLyHoaDon_GUI extends javax.swing.JPanel {
    
    java.util.Date date = new java.util.Date();
    
    /**
     * Creates new form QuanLyHoaDon_GUI
     */
    public QuanLyHoaDon_GUI() {
        initComponents();
        LoadAllHoaDonToJTable();
        
        jdTuNgay.setDateFormatString("yyyy-MM-dd");
        jdDenNgay.setDateFormatString("yyyy-MM-dd");
        
        jdTuNgay.setCalendar(null);
        jdDenNgay.setCalendar(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbQuanLyNhanVien = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jdTuNgay = new com.toedter.calendar.JDateChooser();
        jdDenNgay = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txfTimKiem = new javax.swing.JTextField();
        cbbTimKiem = new javax.swing.JComboBox<>();
        btnXoaHD = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCTHD = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pnXuatHoaDon = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnXuatHoaDon = new javax.swing.JButton();

        lbQuanLyNhanVien.setBackground(new java.awt.Color(102, 102, 255));
        lbQuanLyNhanVien.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        lbQuanLyNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-receipt-26.png"))); // NOI18N
        lbQuanLyNhanVien.setText("QUẢN LÝ HÓA ĐƠN");
        lbQuanLyNhanVien.setToolTipText("");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblHoaDon.setAutoCreateRowSorter(true);
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã nhân viên", "Mã khách hàng", "Ngày lập HD", "Tổng tiền HD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        tblHoaDon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblHoaDonKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 101, 560, 260));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-receipt-20.png"))); // NOI18N
        jLabel2.setText("Danh sách hóa đơn");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 1, 179, 28));

        jLabel3.setText("Lọc:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 60, 20));

        jLabel4.setText("từ ngày");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 60, 20));

        jLabel5.setText("đến ngày");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 50, 20));

        jdTuNgay.setDateFormatString("dd-MM-yyyy");
        jdTuNgay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdTuNgayPropertyChange(evt);
            }
        });
        jPanel1.add(jdTuNgay, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 140, -1));

        jdDenNgay.setDateFormatString("dd-MM-yyyy");
        jdDenNgay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdDenNgayPropertyChange(evt);
            }
        });
        jPanel1.add(jdDenNgay, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 120, -1));

        jLabel6.setText("Tìm kiếm:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        txfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTimKiemKeyReleased(evt);
            }
        });
        jPanel1.add(txfTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 210, 30));

        cbbTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã hóa đơn", "Mã nhân viên", "Mã khách hàng" }));
        cbbTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimKiemActionPerformed(evt);
            }
        });
        jPanel1.add(cbbTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 150, 30));

        btnXoaHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-20.png"))); // NOI18N
        btnXoaHD.setText("Xóa");
        btnXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 80, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm", "Size", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCTHD);
        if (tblCTHD.getColumnModel().getColumnCount() > 0) {
            tblCTHD.getColumnModel().getColumn(1).setMinWidth(150);
            tblCTHD.getColumnModel().getColumn(1).setMaxWidth(150);
            tblCTHD.getColumnModel().getColumn(2).setMinWidth(50);
            tblCTHD.getColumnModel().getColumn(2).setMaxWidth(50);
            tblCTHD.getColumnModel().getColumn(4).setMinWidth(80);
            tblCTHD.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-more-details-20.png"))); // NOI18N
        jLabel1.setText("Chi tiết hóa đơn");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnXuatHoaDon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnXuatHoaDon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnXuatHoaDon.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnXuatHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-pdf-24.png"))); // NOI18N
        btnXuatHoaDon.setText("Xuất hóa đơn");
        btnXuatHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(147, Short.MAX_VALUE)
                .addComponent(btnXuatHoaDon)
                .addGap(144, 144, 144))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnXuatHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnXuatHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(368, 368, 368))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnXuatHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        showChiTietHD();
        
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblHoaDonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHoaDonKeyReleased
        showChiTietHD();
    }//GEN-LAST:event_tblHoaDonKeyReleased

    private void btnXuatHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatHoaDonActionPerformed
        int ViTri = tblHoaDon.getSelectedRow();
        
        if (ViTri != -1){
            int maHDDaChon = Integer.parseInt(tblHoaDon.getValueAt(ViTri, 0).toString());
            XuatHoaDon(maHDDaChon);
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn muốn xuất!");
        }
        
    }//GEN-LAST:event_btnXuatHoaDonActionPerformed

    private void txfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTimKiemKeyReleased
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayHD();
        }
    }//GEN-LAST:event_txfTimKiemKeyReleased

    private void cbbTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimKiemActionPerformed
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayHD();
        }
    }//GEN-LAST:event_cbbTimKiemActionPerformed

    private void jdTuNgayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdTuNgayPropertyChange
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayHD();
        }
    }//GEN-LAST:event_jdTuNgayPropertyChange

    private void jdDenNgayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdDenNgayPropertyChange
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayHD();
        }
       
       if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayHD();
        }
    }//GEN-LAST:event_jdDenNgayPropertyChange

    private void btnXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDActionPerformed
        XoaHD();
    }//GEN-LAST:event_btnXoaHDActionPerformed
    
    
    private void LoadAllHoaDonToJTable() {
        ArrayList<HoaDon_DTO> hoadonArr = new ArrayList<HoaDon_DTO>();
        DefaultTableModel modelHD = (DefaultTableModel) tblHoaDon.getModel();
        modelHD.setRowCount(0); //Xóa dữ liệu đang có trong jtable

        HoaDon_BUS HD_BUS = new HoaDon_BUS();

        hoadonArr = HD_BUS.getAllHoaDon();

        HoaDon_DTO HD_DTO = new HoaDon_DTO();

        for (int i = 0; i < hoadonArr.size(); i++) {
            HD_DTO = hoadonArr.get(i);

            int maHD = HD_DTO.getMaHD();
            int maNV = HD_DTO.getMaNV();
            int maKH = HD_DTO.getMaKH();
            LocalDate ngayLapHD = HD_DTO.getNgayLapHD();
            int tongTienHD = HD_DTO.getTongTienHD();
            String tongTienHDStr = CongCu.FormatTienIntSangString(tongTienHD);
           
            if (HD_DTO.getTrangThaiHD().equals("Mở")){
                Object[] row = {maHD, maNV, maKH, ngayLapHD, tongTienHDStr};
                modelHD.addRow(row);
            }
       
        }
    }
    
    private void showChiTietHD(){
        int ViTri = tblHoaDon.getSelectedRow();
        
        int maHDDaChon = Integer.parseInt(tblHoaDon.getValueAt(ViTri, 0).toString());
        LoadCTHDTheoMaHD(maHDDaChon);
        
        loadReportToJPanel(maHDDaChon);
        
        
    }
    
    private void LoadCTHDTheoMaHD(int maHDDaChon){
        ArrayList<ChiTietHoaDon_DTO> cthdArr = new ArrayList<ChiTietHoaDon_DTO>();
        DefaultTableModel modelHD = (DefaultTableModel)tblCTHD.getModel();
        modelHD.setRowCount(0); //Xóa dữ liệu đang có trong jtable
        
        HoaDon_BUS hoadonBUS = new HoaDon_BUS();
        cthdArr = hoadonBUS.getAllChiTietHoaDon();
        
        ChiTietHoaDon_DTO cthdDTO = new ChiTietHoaDon_DTO();
        
        for (int i=0; i < cthdArr.size(); i++ ){
                cthdDTO = cthdArr.get(i);
            
                int maHD = cthdDTO.getMaHD();
                int maSP = cthdDTO.getMaSP(); 
                String tenSP = cthdDTO.getTenSP();
                int sizeSP = cthdDTO.getSizeSP();
                int soLuongSP = cthdDTO.getSoLuongSP();
                int donGiaSP = cthdDTO.getDonGiaSP();
                String donGiaSPStr = CongCu.FormatTienIntSangString(donGiaSP);
                
                int thanhTien = cthdDTO.getThanhTien();
                String thanhTienStr = CongCu.FormatTienIntSangString(thanhTien);
                
                if ( maHD == maHDDaChon ){
                    Object[] row = {maSP, tenSP, sizeSP, soLuongSP, donGiaSPStr, thanhTienStr};
                    modelHD.addRow(row);
                }

        }
          
    }
    
    private void loadReportToJPanel(int maHDDaChon){
        XuLyDatabase xuLyDB = new XuLyDatabase();
        Connection conn = xuLyDB.openConnection();
        
        try {
            
            HashMap hm = new HashMap();
            hm.put("maHD", maHDDaChon);

            pnXuatHoaDon.removeAll();
            pnXuatHoaDon.repaint();
            pnXuatHoaDon.revalidate();

            //JasperDesign jdesign = JRXmlLoader.load("QuanLyBanGiay/src/GUI/rpXuatHoaDon.jrxml");
            File fileTemp = new File("src\\GUI\\rpXuatHoaDon.jrxml"); //New File lay relative path de get absolute path
            JasperReport jreport = JasperCompileManager.compileReport(fileTemp.getAbsolutePath());
            JasperPrint jprint = JasperFillManager.fillReport(jreport, hm, conn);
            
            JRViewer viewHD = new JRViewer(jprint);
            viewHD.setZoomRatio((float) 0.51); //Set cho vua panel
            
            pnXuatHoaDon.setLayout(new BorderLayout());
            pnXuatHoaDon.add(viewHD);
            
            
        } catch (JRException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoaDon_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Dong ket noi
        finally{
            xuLyDB.closeConnection(conn);
        }
        
        
    }
    
    private void XuatHoaDon(int maHDDaChon){
        XuLyDatabase xuLyDB = new XuLyDatabase();
        Connection conn = xuLyDB.openConnection();
        
        try {
            
            HashMap hm = new HashMap();
            hm.put("maHD", maHDDaChon);

            File fileTemp = new File("src/GUI/rpXuatHoaDon.jrxml"); //New File lay relative path de get absolute path
            JasperReport jreport = JasperCompileManager.compileReport(fileTemp.getAbsolutePath());
            JasperPrint jprint = JasperFillManager.fillReport(jreport, hm, conn);
            
            JasperViewer.viewReport(jprint, false);
         
        } catch (Exception ex) {
            System.out.print(ex);
        }
        
        //Dong ket noi
        finally{
            xuLyDB.closeConnection(conn);
        }
    }
    
    //Tìm kiếm start 
    private void TimKiem(String sqlTimKiem, String valueSearch){
        HoaDon_BUS hoadonBUS = new HoaDon_BUS();
        
        ArrayList<HoaDon_DTO> hoadonArr = hoadonBUS.timKiemHD(sqlTimKiem, valueSearch);
        DefaultTableModel modelHD = (DefaultTableModel)tblHoaDon.getModel();
        modelHD.setRowCount(0);
        
        HoaDon_DTO hoadonDTO = new HoaDon_DTO();
        
        for (int i=0; i < hoadonArr.size(); i++ ){
                hoadonDTO = hoadonArr.get(i);
            
            int maHD = hoadonDTO.getMaHD();
            int maNV = hoadonDTO.getMaNV();
            int maKH = hoadonDTO.getMaKH();
            LocalDate ngayLapHD = hoadonDTO.getNgayLapHD();
            int tongTienHD = hoadonDTO.getTongTienHD();
            String tongTienHDStr = CongCu.FormatTienIntSangString(tongTienHD);
           
     
            Object[] row = {maHD, maNV, maKH, ngayLapHD, tongTienHDStr};
            modelHD.addRow(row);
            
        }   
    }
    
    private void TimKiemHD(){
        String optionTimKiem= (String) cbbTimKiem.getSelectedItem();
        System.out.println("Đã chọn: "+ optionTimKiem);//Test
        
        switch (optionTimKiem){
           case "Mã hóa đơn": {
                String sqlTimKiem = "maHD";
                TimKiem(sqlTimKiem, txfTimKiem.getText());           
                break;
           }
           case "Mã nhân viên": {               
                String sqlTimKiem = "maNV";
                TimKiem(sqlTimKiem, txfTimKiem.getText());           
                break;
           }
           case "Mã khách hàng": {               
                String sqlTimKiem = "maKH";
                TimKiem(sqlTimKiem, txfTimKiem.getText());           
                break;
           }
              
       }
    }
    
    private void locTheoNgayHD(){
        HoaDon_BUS hoadonBUS = new HoaDon_BUS();
        ArrayList<HoaDon_DTO> hoadonArr = new ArrayList<HoaDon_DTO>();
                
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        //Tìm kiếm kết hợp start
        String getCBB = cbbTimKiem.getSelectedItem().toString();
        System.out.println(getCBB); //test
        
        if (txfTimKiem.getText().isEmpty() == false){
            
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                System.out.println("Tu ngay: " + tuNgay);
                String denNgay = df.format(jdDenNgay.getDate());
                System.out.println("Den ngay: " + denNgay);
                
                switch (getCBB){
                    case "Mã hóa đơn": {
                        String valueCBB = "maHD";
                        hoadonArr = hoadonBUS.locTheoNgayHD(tuNgay, denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã nhân viên": {
                        String valueCBB = "maNV";
                        hoadonArr = hoadonBUS.locTheoNgayHD(tuNgay, denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã khách hàng": {
                        String valueCBB = "maKH";
                        hoadonArr = hoadonBUS.locTheoNgayHD(tuNgay, denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    
                }
                
            }
            
            //Lọc bé hơn kết hợp start
            if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
                String denNgay = df.format(jdDenNgay.getDate());

                switch (getCBB){
                    case "Mã hóa đơn": {
                        String valueCBB = "maHD";
                        hoadonArr = hoadonBUS.locBeHonBang(denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã nhân viên": {
                        String valueCBB = "maNV";
                        hoadonArr = hoadonBUS.locBeHonBang(denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã khách hàng": {
                        String valueCBB = "maKH";
                        hoadonArr = hoadonBUS.locBeHonBang(denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    
                }
            }
            //Lọc bé hơn kết hợp end
            //Lọc lớn hơn kết hợp start
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                
                switch (getCBB){
                    case "Mã hóa đơn": {
                        String valueCBB = "maHD";
                        hoadonArr = hoadonBUS.locLonHonBang(tuNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã nhân viên": {
                        String valueCBB = "maNV";
                        hoadonArr = hoadonBUS.locLonHonBang(tuNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã khách hàng": {
                        String valueCBB = "maKH";
                        hoadonArr = hoadonBUS.locLonHonBang(tuNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    
                }
            }
        
        }else{
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                String denNgay = df.format(jdDenNgay.getDate());
                
                hoadonArr = hoadonBUS.locTheoNgayHD(tuNgay, denNgay);
            }
            if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
                String denNgay = df.format(jdDenNgay.getDate());
                
                hoadonArr = hoadonBUS.locBeHonBang(denNgay);
            }
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                
                hoadonArr = hoadonBUS.locLonHonBang(tuNgay);
            }
        }
        
        DefaultTableModel modelHD = (DefaultTableModel)tblHoaDon.getModel();
        modelHD.setRowCount(0);
        
        HoaDon_DTO HD_DTO = new HoaDon_DTO();

        for (int i = 0; i < hoadonArr.size(); i++) {
            HD_DTO = hoadonArr.get(i);

            int maHD = HD_DTO.getMaHD();
            int maNV = HD_DTO.getMaNV();
            int maKH = HD_DTO.getMaKH();
            String ngayLapHD = HD_DTO.getNgayLapHD().toString();
            int tongTienHD = HD_DTO.getTongTienHD();
            String tongTienHDStr = CongCu.FormatTienIntSangString(tongTienHD);
           
     
            Object[] row = {maHD, maNV, maKH, ngayLapHD, tongTienHDStr};
            modelHD.addRow(row);
            

        }
        
        
        
    }
    
    private void XoaHD(){
        DefaultTableModel modelHD = (DefaultTableModel) tblHoaDon.getModel();
        HoaDon_DTO hoadonDTO = new HoaDon_DTO();
        
        if (tblHoaDon.getSelectedRow() != -1){
            int ViTri = tblHoaDon.getSelectedRow();
            hoadonDTO.setMaHD(Integer.parseInt(tblHoaDon.getValueAt(ViTri, 0).toString()));
            
            HoaDon_BUS hoadonBUS = new HoaDon_BUS();
            
            int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa hóa đơn này không?", "Xác nhận", JOptionPane.YES_NO_OPTION );
            
            if (luaChon == JOptionPane.YES_OPTION){
               try{
               int result = hoadonBUS.XoaHD(hoadonDTO);

               if (result != 0) {
                    JOptionPane.showMessageDialog(null,"Xóa hóa đơn thành công!");
                    //XoaInput();
               }else {
                    JOptionPane.showMessageDialog(null,"Xóa hóa đơn thất bại!"); 
               }

                LoadAllHoaDonToJTable();

               } catch (Exception ex) {
                    ex.printStackTrace();
               }

            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm muốn xóa!");
        }
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXoaHD;
    private javax.swing.JButton btnXuatHoaDon;
    private javax.swing.JComboBox<String> cbbTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdDenNgay;
    private com.toedter.calendar.JDateChooser jdTuNgay;
    private javax.swing.JLabel lbQuanLyNhanVien;
    private javax.swing.JPanel pnXuatHoaDon;
    private javax.swing.JTable tblCTHD;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txfTimKiem;
    // End of variables declaration//GEN-END:variables
}

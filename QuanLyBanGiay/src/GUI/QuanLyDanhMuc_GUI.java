/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import BUS.DanhMuc_BUS;
import BUS.SanPham_BUS;
import DTO.DanhMuc_DTO;
import DTO.SanPham_DTO;
import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Administrator
 */
public class QuanLyDanhMuc_GUI extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyDanhMuc_GUI
     */
    public QuanLyDanhMuc_GUI() {
        initComponents();
        LoadAllDanhMucToJTable();
        addTimKiemCBB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbQuanLyNhanVien = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbMaDM = new javax.swing.JLabel();
        txfMaDM = new javax.swing.JTextField();
        lbTenDM = new javax.swing.JLabel();
        txfTenDM = new javax.swing.JTextField();
        btnXoaInput = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnKhoa = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhMuc = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        lbTimKiem1 = new javax.swing.JLabel();
        txfTimKiem = new javax.swing.JTextField();
        cbbTimKiem = new javax.swing.JComboBox();
        btnExcelExport = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        lbQuanLyNhanVien.setBackground(new java.awt.Color(102, 102, 255));
        lbQuanLyNhanVien.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        lbQuanLyNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-product-management-26.png"))); // NOI18N
        lbQuanLyNhanVien.setText("QUẢN LÝ DANH MỤC");
        lbQuanLyNhanVien.setToolTipText("");

        lbMaDM.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lbMaDM.setText("Mã danh mục:");

        txfMaDM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfMaDMKeyPressed(evt);
            }
        });

        lbTenDM.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lbTenDM.setText("Tên danh mục:");

        txfTenDM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfTenDMKeyPressed(evt);
            }
        });

        btnXoaInput.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnXoaInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/clean-icon3.png"))); // NOI18N
        btnXoaInput.setPreferredSize(new java.awt.Dimension(104, 27));
        btnXoaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaInputActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-27.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setPreferredSize(new java.awt.Dimension(104, 27));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnCapNhat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-update-left-rotation-27.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnKhoa.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnKhoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-27.png"))); // NOI18N
        btnKhoa.setText("Xóa");
        btnKhoa.setPreferredSize(new java.awt.Dimension(104, 27));
        btnKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhoaActionPerformed(evt);
            }
        });

        tblDanhMuc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã danh mục", "Tên danh mục"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhMuc.getTableHeader().setReorderingAllowed(false);
        tblDanhMuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhMucMouseClicked(evt);
            }
        });
        tblDanhMuc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDanhMucKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhMuc);
        if (tblDanhMuc.getColumnModel().getColumnCount() > 0) {
            tblDanhMuc.getColumnModel().getColumn(0).setMaxWidth(500);
            tblDanhMuc.getColumnModel().getColumn(1).setMaxWidth(700);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Sản phẩm trong danh mục");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Mã NCC", "Mã danh mục", "Tên sản phẩm", "Size", "Số lượng SP", "Miêu tả SP", "Đơn giá SP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.getTableHeader().setReorderingAllowed(false);
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        tblSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSanPhamKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        lbTimKiem1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbTimKiem1.setText("Tìm kiếm:");

        txfTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfTimKiemActionPerformed(evt);
            }
        });
        txfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTimKiemKeyReleased(evt);
            }
        });

        cbbTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimKiemActionPerformed(evt);
            }
        });

        btnExcelExport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExcelExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-export-excel-27.png"))); // NOI18N
        btnExcelExport.setText("Xuất Excel");
        btnExcelExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnXoaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCapNhat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbMaDM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbTenDM, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfMaDM, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfTenDM, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(329, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcelExport)
                .addGap(153, 153, 153))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaDM, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfMaDM, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTenDM, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfTenDM, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCapNhat)
                        .addComponent(btnKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTimKiem1)
                    .addComponent(cbbTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(btnExcelExport, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(358, 358, 358))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDanhMucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhMucMouseClicked
        showRowClicked();
    }//GEN-LAST:event_tblDanhMucMouseClicked

    private void tblDanhMucKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDanhMucKeyReleased
       showRowClicked();
    }//GEN-LAST:event_tblDanhMucKeyReleased

    private void btnKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhoaActionPerformed
        KhoaDanhMuc();
    }//GEN-LAST:event_btnKhoaActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        CapNhatDanhMuc();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ThemDM();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaInputActionPerformed
        XoaInput();
    }//GEN-LAST:event_btnXoaInputActionPerformed

    private void txfTenDMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTenDMKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
//            focusInput(txfDiaChiNCC);
//        }
    }//GEN-LAST:event_txfTenDMKeyPressed

    private void txfMaDMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfMaDMKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
//            focusInput(txfTenDM);
//        }
    }//GEN-LAST:event_txfMaDMKeyPressed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked

    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void tblSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSanPhamKeyReleased

    }//GEN-LAST:event_tblSanPhamKeyReleased

    private void txfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTimKiemKeyReleased
       TimKiemDM();
    }//GEN-LAST:event_txfTimKiemKeyReleased

    private void cbbTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimKiemActionPerformed
        TimKiemDM();
    }//GEN-LAST:event_cbbTimKiemActionPerformed

    private void btnExcelExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelExportActionPerformed
        ExportExcel();
    }//GEN-LAST:event_btnExcelExportActionPerformed

    private void txfTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfTimKiemActionPerformed
       TimKiemDM();
    }//GEN-LAST:event_txfTimKiemActionPerformed

    private void LoadAllDanhMucToJTable(){
        ArrayList<DanhMuc_DTO> danhmucArr = new ArrayList<DanhMuc_DTO>();
        DefaultTableModel modelDM = (DefaultTableModel) tblDanhMuc.getModel();
        modelDM.setRowCount(0); //Xóa dữ liệu đang có trong jtable

        DanhMuc_BUS DM_BUS = new DanhMuc_BUS();

        danhmucArr = DM_BUS.getAllDanhMuc();

        DanhMuc_DTO DM_DTO = new DanhMuc_DTO();

        for (int i = 0; i < danhmucArr.size(); i++) {
            DM_DTO = danhmucArr.get(i);

            int maDM = DM_DTO.getMaDM();
            String tenDM = DM_DTO.getTenDM();
            int soLuongSPDM = DM_DTO.getSoLuongSPDM();
            
            if ( danhmucArr.get(i).getTrangThaiDM().equals("Mở") ){
                Object[] row = {maDM, tenDM, soLuongSPDM};
                 modelDM.addRow(row);
                }
        }
    }
    
     private void showRowClicked() {
        int viTri = tblDanhMuc.getSelectedRow();
        DanhMuc_BUS DM_BUS = new DanhMuc_BUS();
         System.out.println("Đã chọn dòng: " + viTri);
        
        
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        DefaultTableModel modelSP = (DefaultTableModel) tblSanPham.getModel();
        modelSP.setRowCount(0); //Xóa dữ liệu đang có trong jtable

        sanphamArr = DM_BUS.getAllSPDanhMuc(viTri+1);

        SanPham_DTO SP_DTO = new SanPham_DTO();

         for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i);

            int maSP = SP_DTO.getMaSP();
            int maNCC = SP_DTO.getMaNCC();
            int maDanhMuc = SP_DTO.getMaDM();
            String tenSP = SP_DTO.getTenSP();
            int sizeSP = SP_DTO.getSizeSP();
            int soLuongSP = SP_DTO.getSoLuongSP();
            String mieuTaSP = SP_DTO.getMieuTaSP();
            int donGia = SP_DTO.getDonGiaSP();
            byte[] anhSP = SP_DTO.getAnhSP();

            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                Object[] row = {maSP, maNCC, maDanhMuc, tenSP, sizeSP, soLuongSP, mieuTaSP, donGia, anhSP};
                modelSP.addRow(row);
            }
    }
       int choose = tblDanhMuc.getSelectedRow();
       
       txfMaDM.setEnabled(false);
       txfMaDM.setDisabledTextColor(Color.GRAY);
        if (viTri != -1){
            txfMaDM.setText(tblDanhMuc.getValueAt(viTri, 0).toString());  
            txfTenDM.setText(tblDanhMuc.getValueAt(viTri, 1).toString());
        }//Show thông tin nhân viên được click lên Input
    
}
     private void addTimKiemCBB(){
        cbbTimKiem.addItem("Mã danh mục");
        cbbTimKiem.addItem("Tên danh mục");
     }
    private void ExportExcel(){
        JFileChooser file = new JFileChooser(); //Khởi tạo JFileChooser
        file.setCurrentDirectory(new File(System.getProperty("user.home"))); 
        
        int result = file.showSaveDialog(null);
        if ( result == JFileChooser.APPROVE_OPTION){
            XSSFWorkbook excelWorkbook = new XSSFWorkbook();
            XSSFSheet excelSheet = excelWorkbook.createSheet("Danh sách danh mục");
            
            XSSFRow row = null;
            Cell cell = null;
            
            row = excelSheet.createRow((short) 2);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH SÁCH DANH MỤC");

            row = excelSheet.createRow((short) 3);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Mã danh mục");
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tên danh mục");
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Số lượng sản phẩm");
            
            for (int i = 0; i < tblDanhMuc.getRowCount(); i++){
                row = excelSheet.createRow((short) 4 + i);
                row.setHeight((short) 400);
                for (int j = 0; j < tblDanhMuc.getColumnCount(); j++){
                    row.createCell(j).setCellValue(tblDanhMuc.getValueAt(i, j).toString());
                }
            }
            
            FileOutputStream excelFOS;
            BufferedOutputStream excelBOS;
            try{
                excelFOS = new FileOutputStream(new File(file.getSelectedFile() + ".xls"));
                excelBOS = new BufferedOutputStream(excelFOS);
                excelWorkbook.write(excelBOS);
                JOptionPane.showMessageDialog(null, "Xuất file excel thành công!");
                excelBOS.close();
                excelWorkbook.close();
            }catch (IOException e){
                e.printStackTrace();
            }
        }
    }
    private void TimKiemDM(){
        String optionTimKiem= (String) cbbTimKiem.getSelectedItem();
        System.out.println("Đã chọn: "+ optionTimKiem);//Test
        
        switch (optionTimKiem){
           case "Mã danh mục": {               
                String sqlTimKiem = "maDM";
                TimKiem(sqlTimKiem, txfTimKiem.getText());
                break;
           }
           case "Tên danh mục": {               
                String sqlTimKiem = "tenDM";
                TimKiem(sqlTimKiem, txfTimKiem.getText());        
                break;
           }
       }
    }
    private void TimKiem(String sqlTimKiem, String valueSearch){
        DanhMuc_BUS DM_BUS = new DanhMuc_BUS();
        
        ArrayList<DanhMuc_DTO> danhmucArr = DM_BUS.timKiemDM(sqlTimKiem, valueSearch);
        DefaultTableModel modelDM = (DefaultTableModel)tblDanhMuc.getModel();
        modelDM.setRowCount(0);
        
        DanhMuc_DTO DM_DTO = new DanhMuc_DTO();
        
        for (int i=0; i < danhmucArr.size(); i++ ){
                DM_DTO = danhmucArr.get(i);
                
                int maDM = DM_DTO.getMaDM();
                String tenDM = DM_DTO.getTenDM();
                int soLuongSPDM = DM_DTO.getSoLuongSPDM();

                if ( danhmucArr.get(i).getTrangThaiDM().equals("Mở") ){
                    Object[] row = {maDM, tenDM, soLuongSPDM};
                     modelDM.addRow(row);
                }
        }   
    }
    
    private void ThemDM(){
        DanhMuc_DTO danhmucDTO = new DanhMuc_DTO();
        int getMaDM;
        
        if (txfMaDM.getDisabledTextColor() != Color.GRAY){
            
            if (txfMaDM.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập mã danh mục!");
                txfMaDM.requestFocus();
            }
            else if (txfTenDM.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập tên danh mục!");
                txfTenDM.requestFocus();
            }else{

                try{
                    getMaDM = Integer.parseInt(txfMaDM.getText());
                }catch(NumberFormatException e){ //Kiểm tra có phải số nguyên hay không
                    JOptionPane.showMessageDialog(null, "Mã nhân viên phải là số nguyên!");
                    txfMaDM.requestFocus();
                }
                        getMaDM = Integer.parseInt(txfMaDM.getText());
                        danhmucDTO.setMaDM(getMaDM);
                        danhmucDTO.setTenDM(txfTenDM.getText());
                        DanhMuc_BUS danhmucBUS = new DanhMuc_BUS();

                        try {
                            int result = danhmucBUS.ThemDanhMuc(danhmucDTO);

                            if (result != 0) {
                                JOptionPane.showMessageDialog(null,"Thêm danh mục thành công!");
                                XoaInput();
                            }else {
                                System.out.println("Thêm danh mục thất bại!");
                                JOptionPane.showMessageDialog(null,"Thêm danh mục thất bại! \n Mã danh mục đã tồn tại!"); //Chưa ràng buộc tên tài khoản
                                txfMaDM.requestFocus();
                               // XoaInput();
                            }
                            LoadAllDanhMucToJTable();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                }
        }else JOptionPane.showMessageDialog(null, "Vui lòng nhấn Clean trước khi thêm!");
    }
    
    private void XoaInput(){
    
        txfMaDM.setEnabled(true);
        txfMaDM.setDisabledTextColor(Color.WHITE);
        
        if (txfMaDM.getText().isEmpty() == false){
            txfMaDM.setText("");
        }
        if (txfTenDM.getText().isEmpty() == false){
            txfTenDM.setText(""); 
        }
    }
    private void focusInput(JTextField nameTextField){
        nameTextField.requestFocus();
    } 
     private void CapNhatDanhMuc(){
        DanhMuc_DTO danhmucDTO = new DanhMuc_DTO();
        System.out.println(tblDanhMuc.getSelectedRow());//Test
        
        if (tblDanhMuc.getSelectedRow() == -1 || txfMaDM.getText().equals("")){
               JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng muốn sửa!");
        }
        else if (txfMaDM.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập mã danh mục!");
                txfMaDM.requestFocus();
        }
        else if (txfTenDM.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập tên danh mục!");
                txfTenDM.requestFocus();
        }else{
            danhmucDTO.setMaDM(Integer.parseInt(txfMaDM.getText()));
            danhmucDTO.setTenDM(txfTenDM.getText());
            DanhMuc_BUS danhmucBUS = new DanhMuc_BUS();

            try{
               int result = danhmucBUS.CapNhatDanhMuc(danhmucDTO);

               if (result != 0) {
                    JOptionPane.showMessageDialog(null,"Cập nhật danh mục thành công!");        
               }else {
                    JOptionPane.showMessageDialog(null,"Cập nhật danh mục thất bại!"); 
               }

                LoadAllDanhMucToJTable();

               } catch (Exception ex) {
                    ex.printStackTrace();
               }
     
        }
   }
     private void KhoaDanhMuc(){
        DanhMuc_DTO danhmucDTO = new DanhMuc_DTO();
        
        if (tblDanhMuc.getSelectedRow() != -1  && txfMaDM.getText().isEmpty() == false){
            danhmucDTO.setMaDM(Integer.parseInt(txfMaDM.getText()));

            DanhMuc_BUS danhmucBUS = new DanhMuc_BUS();

            int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa danh mục này không?", "Xác nhận", JOptionPane.YES_NO_OPTION );
            if (luaChon == JOptionPane.YES_OPTION){
               try{
               int result = danhmucBUS.KhoaDanhMuc(danhmucDTO);

               if (result != 0) {
                    JOptionPane.showMessageDialog(null,"Xóa danh mục thành công!");
                    XoaInput();
               }else {
                    JOptionPane.showMessageDialog(null,"Xóa danh mục thất bại!"); 
               }

                LoadAllDanhMucToJTable();

               } catch (Exception ex) {
                    ex.printStackTrace();
               }

            }
        }else JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng muốn xóa!");
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnExcelExport;
    private javax.swing.JButton btnKhoa;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoaInput;
    private javax.swing.JComboBox cbbTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbMaDM;
    private javax.swing.JLabel lbQuanLyNhanVien;
    private javax.swing.JLabel lbTenDM;
    private javax.swing.JLabel lbTimKiem1;
    private javax.swing.JTable tblDanhMuc;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txfMaDM;
    private javax.swing.JTextField txfTenDM;
    private javax.swing.JTextField txfTimKiem;
    // End of variables declaration//GEN-END:variables
}

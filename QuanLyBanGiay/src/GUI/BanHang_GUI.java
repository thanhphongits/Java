/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import BUS.CongCu;
import BUS.DanhMuc_BUS;
import BUS.HoaDon_BUS;
import BUS.KhachHang_BUS;
import BUS.NhaCungCap_BUS;
import BUS.NhanVien_BUS;
import BUS.SanPham_BUS;
import DTO.ChiTietHoaDon_DTO;
import DTO.DanhMuc_DTO;
import DTO.HoaDon_DTO;
import DTO.KhachHang_DTO;
import DTO.NhaCungCap_DTO;
import DTO.SanPham_DTO;
import java.awt.Color;
import java.awt.Image;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class BanHang_GUI extends javax.swing.JPanel {
    
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    java.util.Date date = new java.util.Date();
    NhanVien_BUS nhanvienBUS = new NhanVien_BUS();
    KhachHang_BUS khachhangBUS = new KhachHang_BUS();
    /**
     * Creates new form QuanLyHoaDon_GUI
     */
    public BanHang_GUI() {
        initComponents();
        
        //nhanvienBUS.getAllTenNVCBB(cbbTenNV);
        txfNhanVien.setText(DangNhap_GUI.maNVOnline + "-" + DangNhap_GUI.hoTenOnline);
        khachhangBUS.getAllTenKHCBB(cbbTenKH);
        txfNgayLapHD.setText(df.format(date));
        LoadInfoKhachHang();
        LoadAllSanPhamToJTable();
        LoadMaHoaDon();
        addTimKiemCBB();
        TinhTongTien();
        getTenKHTuCBB();//test
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbBanHang = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lbNgayLapHD = new javax.swing.JLabel();
        lbMaHoaDon = new javax.swing.JLabel();
        txfMaHoaDon = new javax.swing.JTextField();
        lbTenNV = new javax.swing.JLabel();
        lbTimKH = new javax.swing.JLabel();
        txfTimKH = new javax.swing.JTextField();
        cbbTenKH = new javax.swing.JComboBox<>();
        lbTenKhachHang = new javax.swing.JLabel();
        lbDiaChiKH = new javax.swing.JLabel();
        txfDiaChiKH = new javax.swing.JTextField();
        lbSDTKH = new javax.swing.JLabel();
        txfSDTKH = new javax.swing.JTextField();
        lbGhiChu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txfGhiChu = new javax.swing.JTextArea();
        lbsearch = new javax.swing.JLabel();
        txfNgayLapHD = new javax.swing.JTextField();
        txfNhanVien = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachSP = new javax.swing.JTable();
        lbDSSP = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txfTimKiemSP = new javax.swing.JTextField();
        lbTimKiemSP = new javax.swing.JLabel();
        cbbTimKiemSP = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        lbGioHang = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        btnXoaCart = new javax.swing.JButton();
        btnXoaAllCart = new javax.swing.JButton();
        btnThemGioHang = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        lbMaGiamGia = new javax.swing.JLabel();
        txfMaGiamGia = new javax.swing.JTextField();
        txfTienGiam = new javax.swing.JTextField();
        lbTienGiam = new javax.swing.JLabel();
        lbTongTien = new javax.swing.JLabel();
        txfTongTien = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();
        txfTamTinh = new javax.swing.JTextField();
        lbTamTinh = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lbAnhSP = new javax.swing.JLabel();
        lbNhaCungCap = new javax.swing.JLabel();
        txfNhaCungCap = new javax.swing.JTextField();
        lbDanhMuc = new javax.swing.JLabel();
        txfDanhMuc = new javax.swing.JTextField();
        lbMieuTaSP = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txfMieuTaSP = new javax.swing.JTextArea();

        lbBanHang.setBackground(new java.awt.Color(102, 102, 255));
        lbBanHang.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        lbBanHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-sell-27.png"))); // NOI18N
        lbBanHang.setText("BÁN HÀNG");
        lbBanHang.setToolTipText("");

        jPanel2.setDoubleBuffered(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbNgayLapHD.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbNgayLapHD.setText("Ngày lập HD:");

        lbMaHoaDon.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbMaHoaDon.setText("Mã hóa đơn:");

        txfMaHoaDon.setEditable(false);

        lbTenNV.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbTenNV.setText("Tên nhân viên:");

        lbTimKH.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbTimKH.setText("Tìm khách hàng:");

        txfTimKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTimKHKeyReleased(evt);
            }
        });

        cbbTenKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTenKHActionPerformed(evt);
            }
        });

        lbTenKhachHang.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbTenKhachHang.setText("Tên khách hàng:");

        lbDiaChiKH.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbDiaChiKH.setText("Địa chỉ KH:");

        lbSDTKH.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbSDTKH.setText("SDT KH:");

        lbGhiChu.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbGhiChu.setText("Ghi chú:");

        txfGhiChu.setColumns(20);
        txfGhiChu.setRows(5);
        jScrollPane1.setViewportView(txfGhiChu);
        txfGhiChu.getAccessibleContext().setAccessibleDescription("");

        lbsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-web-search-27.png"))); // NOI18N
        lbsearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txfNgayLapHD.setEditable(false);

        txfNhanVien.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbNgayLapHD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTenNV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbMaHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfNgayLapHD, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(txfMaHoaDon)
                    .addComponent(txfNhanVien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbTenKhachHang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTimKH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbDiaChiKH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbTenKH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txfTimKH, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbsearch))
                    .addComponent(txfDiaChiKH))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txfSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(lbGhiChu))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lbsearch)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfTimKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTimKH)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMaHoaDon)
                            .addComponent(lbSDTKH)
                            .addComponent(txfSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNgayLapHD)
                            .addComponent(txfNgayLapHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTenKhachHang)
                            .addComponent(cbbTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbGhiChu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbTenNV)
                                .addComponent(lbDiaChiKH)
                                .addComponent(txfDiaChiKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txfNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblDanhSachSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Size", "Đơn giá", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSachSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachSPMouseClicked(evt);
            }
        });
        tblDanhSachSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDanhSachSPKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachSP);
        if (tblDanhSachSP.getColumnModel().getColumnCount() > 0) {
            tblDanhSachSP.getColumnModel().getColumn(0).setMaxWidth(100);
            tblDanhSachSP.getColumnModel().getColumn(1).setMaxWidth(220);
            tblDanhSachSP.getColumnModel().getColumn(2).setMaxWidth(50);
            tblDanhSachSP.getColumnModel().getColumn(3).setMaxWidth(100);
            tblDanhSachSP.getColumnModel().getColumn(4).setMaxWidth(70);
        }

        lbDSSP.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbDSSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-product-20.png"))); // NOI18N
        lbDSSP.setText("Danh sách sản phẩm");

        txfTimKiemSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTimKiemSPKeyReleased(evt);
            }
        });

        lbTimKiemSP.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbTimKiemSP.setText("Tìm kiếm:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbDSSP, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDSSP)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addComponent(lbTimKiemSP))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbTimKiemSP)
                            .addComponent(txfTimKiemSP))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbGioHang.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbGioHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-shopping-cart-20.png"))); // NOI18N
        lbGioHang.setText("Giỏ hàng");

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên sản phẩm", "Size", "Đơn giá", "Số lượng", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblGioHang);
        if (tblGioHang.getColumnModel().getColumnCount() > 0) {
            tblGioHang.getColumnModel().getColumn(0).setMaxWidth(50);
            tblGioHang.getColumnModel().getColumn(1).setMaxWidth(50);
            tblGioHang.getColumnModel().getColumn(2).setMaxWidth(100);
            tblGioHang.getColumnModel().getColumn(3).setMaxWidth(50);
            tblGioHang.getColumnModel().getColumn(4).setMaxWidth(80);
            tblGioHang.getColumnModel().getColumn(5).setMaxWidth(65);
            tblGioHang.getColumnModel().getColumn(6).setMaxWidth(120);
        }

        btnXoaCart.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoaCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-20.png"))); // NOI18N
        btnXoaCart.setText("Xóa");
        btnXoaCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCartActionPerformed(evt);
            }
        });

        btnXoaAllCart.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoaAllCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-table-20.png"))); // NOI18N
        btnXoaAllCart.setText("Xóa tất cả");
        btnXoaAllCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaAllCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btnXoaAllCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoaCart)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(lbGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbGioHang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoaCart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaAllCart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnThemGioHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-wide-long-right-arrow-23.png"))); // NOI18N
        btnThemGioHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemGioHangActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbMaGiamGia.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbMaGiamGia.setText("Mã giảm giá:");

        txfMaGiamGia.setEditable(false);
        txfMaGiamGia.setText("Đang phát triển");
        txfMaGiamGia.setEnabled(false);

        txfTienGiam.setEditable(false);
        txfTienGiam.setText("Đang phát triển");
        txfTienGiam.setEnabled(false);

        lbTienGiam.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbTienGiam.setText("Tiền giảm:");

        lbTongTien.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbTongTien.setText("Tổng tiền:");

        txfTongTien.setEditable(false);

        btnThanhToan.setBackground(new java.awt.Color(102, 255, 0));
        btnThanhToan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-cash-receipt-24.png"))); // NOI18N
        btnThanhToan.setText("THANH TOÁN");
        btnThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThanhToanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThanhToanMouseExited(evt);
            }
        });
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        txfTamTinh.setEditable(false);

        lbTamTinh.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbTamTinh.setText("Tạm tính:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbTamTinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbMaGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTienGiam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txfTamTinh)
                    .addComponent(txfMaGiamGia)
                    .addComponent(txfTienGiam)
                    .addComponent(txfTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnThanhToan)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfTamTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTamTinh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfMaGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMaGiamGia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfTienGiam)
                    .addComponent(lbTienGiam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTongTien))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbAnhSP.setText("Ảnh sản phẩm");
        lbAnhSP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbAnhSP.setDoubleBuffered(true);

        lbNhaCungCap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbNhaCungCap.setText("Nhà cung cấp:");

        txfNhaCungCap.setEditable(false);

        lbDanhMuc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDanhMuc.setText("Danh mục:");

        txfDanhMuc.setEditable(false);

        lbMieuTaSP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbMieuTaSP.setText("Miêu tả SP:");

        txfMieuTaSP.setEditable(false);
        txfMieuTaSP.setColumns(20);
        txfMieuTaSP.setRows(5);
        txfMieuTaSP.setAutoscrolls(false);
        jScrollPane4.setViewportView(txfMieuTaSP);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(lbAnhSP, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMieuTaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNhaCungCap)
                            .addComponent(lbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txfDanhMuc)
                            .addComponent(txfNhaCungCap, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))))
                .addGap(11, 11, 11))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(lbAnhSP, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNhaCungCap)
                    .addComponent(txfNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDanhMuc)
                    .addComponent(txfDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(lbMieuTaSP)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(btnThemGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbBanHang, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(369, 369, 369))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbBanHang, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbTenKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTenKHActionPerformed
        LoadInfoKhachHang();
    }//GEN-LAST:event_cbbTenKHActionPerformed

    private void txfTimKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTimKHKeyReleased
        timKiemMaVaHoTenKH();
    }//GEN-LAST:event_txfTimKHKeyReleased

    private void tblDanhSachSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachSPMouseClicked
        showRowClicked();
    }//GEN-LAST:event_tblDanhSachSPMouseClicked

    private void txfTimKiemSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTimKiemSPKeyReleased
       TimKiemSP();
    }//GEN-LAST:event_txfTimKiemSPKeyReleased

    private void tblDanhSachSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDanhSachSPKeyReleased
        showRowClicked();
    }//GEN-LAST:event_tblDanhSachSPKeyReleased

    private void btnThemGioHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemGioHangActionPerformed
        ThemGioHang();
    }//GEN-LAST:event_btnThemGioHangActionPerformed

    private void btnThanhToanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThanhToanMouseEntered
        btnThanhToan.setBackground(new Color(153,255,0));
    }//GEN-LAST:event_btnThanhToanMouseEntered

    private void btnThanhToanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThanhToanMouseExited
        btnThanhToan.setBackground(new Color(102,255,0));
    }//GEN-LAST:event_btnThanhToanMouseExited

    private void btnXoaCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCartActionPerformed
        xoaSPKhoiGioHang();
    }//GEN-LAST:event_btnXoaCartActionPerformed

    private void btnXoaAllCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaAllCartActionPerformed
        XoaAllSPGioHang();
    }//GEN-LAST:event_btnXoaAllCartActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        ThanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed
    
    
    private int getMaKHTuCBB(){
        int maKH = 0;
        
        String valueCBB = cbbTenKH.getSelectedItem().toString();
        int kytungang = valueCBB.indexOf("-");
        
        if (kytungang != -1){ //Nếu tìm thấy "-"
            maKH = Integer.parseInt(valueCBB.substring(0, kytungang)); //Cắt chuỗi
        }
        
        return maKH;
    }
    
    private String getTenKHTuCBB(){
        String tenKH = "";
        
        String valueCBB = cbbTenKH.getSelectedItem().toString();
        int kytungang = valueCBB.indexOf("-");
        
        if (kytungang != -1){ //Nếu tìm thấy "-"
            tenKH = valueCBB.substring(kytungang + 1, valueCBB.length()); //Cắt chuỗi
        }
        
        return tenKH;
    }
    
//    private int getMaNVTuCBB(){
//        int maNV = 0;
//        
//        String valueCBB = cbbTenNV.getSelectedItem().toString();
//        int kytungang = valueCBB.indexOf("-");
//        
//        if (kytungang != -1){ //Nếu tìm thấy "-"
//            maNV = Integer.parseInt(valueCBB.substring(0, kytungang)); //Cắt chuỗi
//        }
//        
//        return maNV;
//    }
    
//    private String getTenNVTuCBB(){
//        String tenNV = "";
//        
//        String valueCBB = cbbTenNV.getSelectedItem().toString();
//        int kytungang = valueCBB.indexOf("-");
//        
//        if (kytungang != -1){ //Nếu tìm thấy "-"
//            tenNV = valueCBB.substring(kytungang + 1, valueCBB.length() ); //Cắt chuỗi
//        }
//        
//        return tenNV;
//    }
    
    private void LoadInfoKhachHang(){
        int maKHCBB = getMaKHTuCBB();
        System.out.println(maKHCBB); //test
        ArrayList<KhachHang_DTO> khArr = new ArrayList<KhachHang_DTO>();
                
        KhachHang_BUS khachhangBUS = new KhachHang_BUS();
 
        try {
            khArr = khachhangBUS.getAllKhachHang();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BanHang_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        KhachHang_DTO khachhangDTO = new KhachHang_DTO();
        
        for (int i=0; i < khArr.size(); i++ ){
                khachhangDTO = khArr.get(i);
    
                String diaChiKH = khachhangDTO.getDiaChiKH();
                String sdtKH = khachhangDTO.getSdtKH(); //test String
                
                if (khachhangDTO.getMaKH() == maKHCBB){
                    txfDiaChiKH.setText(diaChiKH);
                    txfSDTKH.setText(sdtKH);
                }       
        }    
    }
    
    private void timKiemMaVaHoTenKH(){ //Kết quả xuất lên combobox
        KhachHang_BUS khachhangBUS = new KhachHang_BUS();
        
        ArrayList<KhachHang_DTO> khachhangArr = khachhangBUS.timKiemTheoMaVaHoTenKH(txfTimKH.getText());
        
        KhachHang_DTO khachhangDTO = new KhachHang_DTO();
        
        for (int i=0; i < khachhangArr.size(); i++ ){
            khachhangDTO = khachhangArr.get(i);
            
            int maKH = khachhangDTO.getMaKH();
            String hoTenKH = khachhangDTO.getHoTenKH();
            
            if (khachhangDTO.getTrangThaiKH().equals("Mở")){
                cbbTenKH.setSelectedItem(maKH + "-" + hoTenKH);
            }
            
        }
    
    }
    
    private void LoadAllSanPhamToJTable() {
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        DefaultTableModel modelSP = (DefaultTableModel) tblDanhSachSP.getModel();
        modelSP.setRowCount(0); //Xóa dữ liệu đang có trong jtable

        SanPham_BUS SP_BUS = new SanPham_BUS();

        sanphamArr = SP_BUS.getAllSanPham();

        SanPham_DTO SP_DTO = new SanPham_DTO();

        for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i);

            int maSP = SP_DTO.getMaSP();
            String tenSP = SP_DTO.getTenSP();
            int sizeSP = SP_DTO.getSizeSP();
            int soLuongSP = SP_DTO.getSoLuongSP();
            int donGia = SP_DTO.getDonGiaSP();
            String donGiaStr = CongCu.FormatTienIntSangString(donGia);
            
            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                Object[] row = {maSP, tenSP, sizeSP, donGiaStr, soLuongSP};
                modelSP.addRow(row);
            }

        }
    }
    
    private void showRowClicked() {
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        ArrayList<NhaCungCap_DTO> nccArr = new ArrayList<NhaCungCap_DTO>();
        ArrayList<DanhMuc_DTO> dmArr = new ArrayList<DanhMuc_DTO>();
        
        int giaTriMaSP = Integer.parseInt(tblDanhSachSP.getValueAt(tblDanhSachSP.getSelectedRow(), 0).toString());
    
        System.out.println(giaTriMaSP);//test
        
        SanPham_BUS SP_BUS = new SanPham_BUS();
        NhaCungCap_BUS NCC_BUS = new NhaCungCap_BUS();
        DanhMuc_BUS DM_BUS = new DanhMuc_BUS();
        
        sanphamArr = SP_BUS.getAllSanPham();
        nccArr = NCC_BUS.getAllNCC();
        dmArr = DM_BUS.getAllDanhMuc();

        SanPham_DTO SP_DTO = new SanPham_DTO();
        NhaCungCap_DTO NCC_DTO = new NhaCungCap_DTO();
        DanhMuc_DTO DM_DTO = new DanhMuc_DTO();
        
        for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i); 
            
            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                if (SP_DTO.getMaSP() == giaTriMaSP){
                    for (int j = 0; j < nccArr.size(); j++){
                       NCC_DTO = nccArr.get(j);
                        if (NCC_DTO.getMaNCC() == SP_DTO.getMaNCC()){
                            for (int k =0; k < dmArr.size(); k++){
                                DM_DTO = dmArr.get(k);
                                if (DM_DTO.getMaDM() == SP_DTO.getMaDM()){
                                   txfMieuTaSP.setText(SP_DTO.getMieuTaSP());
                                   lbAnhSP.setIcon(showImageToJLabel(null, SP_DTO.getAnhSP()));
                                   txfNhaCungCap.setText(NCC_DTO.getTenNCC());
                                   txfDanhMuc.setText(DM_DTO.getTenDM());
                                } //if
                            } //for 
                        } //if
                    }//for
                }//if
            }
        }
        
    }
    
    private ImageIcon showImageToJLabel(String ImgPath, byte[] anhNV) {
        ImageIcon myImg = null;
        
        if (ImgPath != null){
            myImg = new ImageIcon(ImgPath); //Gán đường dẫn mới (ImgPath) nếu chưa có đường dẫn
        }else{
            myImg = new ImageIcon(anhNV); //Lấy ảnh row được click
        }

        Image img = myImg.getImage();
        Image img2 = img.getScaledInstance(lbAnhSP.getWidth(), lbAnhSP.getHeight(), Image.SCALE_SMOOTH); //Gắn ảnh vào lblNhanVienImage

        ImageIcon image = new ImageIcon(img2);
        return image;
    } //Show hình ảnh lên JLabel
    
    private void addTimKiemCBB(){
        cbbTimKiemSP.addItem("Tên sản phẩm");
        cbbTimKiemSP.addItem("Mã sản phẩm");
        cbbTimKiemSP.addItem("Size");
        cbbTimKiemSP.addItem("Đơn giá");
        cbbTimKiemSP.addItem("Số lượng");
    }
    
    private void TimKiemSP(){
        String optionTimKiem= (String) cbbTimKiemSP.getSelectedItem();
        System.out.println("Đã chọn: "+ optionTimKiem);//Test
        
        switch (optionTimKiem){
           case "Tên sản phẩm": {
                String sqlTimKiem = "tenSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Mã sản phẩm": {               
                String sqlTimKiem = "maSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Size": {               
                String sqlTimKiem = "sizeSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Đơn giá": {               
                String sqlTimKiem = "donGiaSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Số lượng": {               
                String sqlTimKiem = "soLuongSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
       }
    }
    
    private void TimKiem(String sqlTimKiem, String valueSearch) {
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        DefaultTableModel modelSP = (DefaultTableModel) tblDanhSachSP.getModel();
        modelSP.setRowCount(0); //Xóa dữ liệu đang có trong jtable
        
        SanPham_BUS SP_BUS = new SanPham_BUS();

        sanphamArr = SP_BUS.timKiemSP(sqlTimKiem, valueSearch);

        SanPham_DTO SP_DTO = new SanPham_DTO();

        for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i);

            int maSP = SP_DTO.getMaSP();
            String tenSP = SP_DTO.getTenSP();
            int sizeSP = SP_DTO.getSizeSP();
            int soLuongSP = SP_DTO.getSoLuongSP();      
            int donGia = SP_DTO.getDonGiaSP();
            String donGiaStr = CongCu.FormatTienIntSangString(donGia);
  
            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                Object[] row = {maSP, tenSP, sizeSP, donGiaStr, soLuongSP};
                modelSP.addRow(row);
            }
        }
    }
    
    private void ThemGioHang(){
        DefaultTableModel modelGioHang = (DefaultTableModel)tblGioHang.getModel();
        int soLuongThem = 0;
        int checkInput = 0;
        int checkDaCo = 0;
        
        if (tblDanhSachSP.getSelectedRow() != -1 ){
            int giaTriSLSP = Integer.parseInt(tblDanhSachSP.getValueAt(tblDanhSachSP.getSelectedRow(), 4).toString());
            
            do{
                checkInput = 0;
                String soLuongThemStr = JOptionPane.showInputDialog("Nhập số lượng muốn thêm: ");
                
                if (soLuongThemStr != null){
                    
                    try{
                        soLuongThem = Integer.parseInt(soLuongThemStr);
                    }catch (NumberFormatException e){ //Kiểm tra nhập số
                        JOptionPane.showMessageDialog(null, "Vui lòng nhập số nguyên!"); 
                        checkInput = 1;
                    }
                        if ((soLuongThem <= giaTriSLSP) && (soLuongThem != 0) ){
                            int SLSPConLai = giaTriSLSP - soLuongThem;
                            tblDanhSachSP.setValueAt(SLSPConLai, tblDanhSachSP.getSelectedRow(), 4);//Set số lượng còn lại
                            
                            //Thêm vào giỏ hàng 
                            int maSP = Integer.parseInt(tblDanhSachSP.getValueAt(tblDanhSachSP.getSelectedRow(), 0).toString());    
                            String tenSP = tblDanhSachSP.getValueAt(tblDanhSachSP.getSelectedRow(), 1).toString();
                            int sizeSP = Integer.parseInt(tblDanhSachSP.getValueAt(tblDanhSachSP.getSelectedRow(), 2).toString());
                            
                            String donGiaSPStr = tblDanhSachSP.getValueAt(tblDanhSachSP.getSelectedRow(), 3).toString();
                            int donGiaSP = CongCu.FormatTienStringSangInt(donGiaSPStr);
                            
                            int thanhTien = soLuongThem * donGiaSP;
                            String thanhTienStr = CongCu.FormatTienIntSangString(thanhTien);
                            
                            //Kiểm tra sản phẩm đã tồn tại trong giỏ hàng hay chưa, nếu có thì tăng số lượng
                            if (tblGioHang.getRowCount() == 0){
                                Object[] row = {tblGioHang.getRowCount() + 1, maSP, tenSP, sizeSP, donGiaSPStr, soLuongThem, thanhTienStr};
                                modelGioHang.addRow(row);
                            }else{
                                checkDaCo = 0;
                                for (int i = 0; i < tblGioHang.getRowCount(); i++){
                                    int maSPGioHang = Integer.parseInt(tblGioHang.getValueAt(i, 1).toString());
                                    if (maSP == maSPGioHang){
                                        checkDaCo = 1;
                                        int soLuongDaCo = Integer.parseInt(tblGioHang.getValueAt(i, 5).toString());
                                        tblGioHang.setValueAt(soLuongDaCo + soLuongThem, i, 5); //Thay đổi số lượng
                                        tblGioHang.setValueAt(CongCu.FormatTienIntSangString((soLuongDaCo + soLuongThem)*donGiaSP) , i, 6);//Thay đổi thành tiền
                                        break;
                                    }
                                }
                                if (checkDaCo != 1){
                                    Object[] row = {tblGioHang.getRowCount() + 1, maSP, tenSP, sizeSP, donGiaSPStr, soLuongThem, thanhTienStr};
                                    modelGioHang.addRow(row);
                                }
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(null, "Số lượng không hợp lệ! Vui lòng nhập lại!");
                            checkInput = 1;
                        }
                    
                }else{
                    checkInput = 0; //Nếu bấm Thoát thì thoát vòng lặp
                }
            }while (checkInput == 1); //Vòng lặp check nhập vào
                  
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm muốn thêm!");
        }
        
        this.TinhTongTien();
    }
    
    private void TinhTongTien(){
        int tamTinh = 0;
        int tongTien = 0;
        
        for (int i = 0; i < tblGioHang.getRowCount(); i++){
            String thanhTienSPStr = tblGioHang.getValueAt(i, 6).toString();
            int thanhTienSP = CongCu.FormatTienStringSangInt(thanhTienSPStr);
            
            tamTinh += thanhTienSP;
            tongTien += thanhTienSP;
        }
        
        String tamTinhStr = CongCu.FormatTienIntSangString(tamTinh); 
        String tongTienStr = CongCu.FormatTienIntSangString(tongTien);
        
        //Gắn vào textfield
        txfTamTinh.setText(tamTinhStr);
        txfTongTien.setText(tongTienStr);
         
    }
    
    private void xoaSPKhoiGioHang(){
        DefaultTableModel modelGioHang = (DefaultTableModel) tblGioHang.getModel();
        
        if (tblGioHang.getSelectedRow() != -1){
            int rowDaChon = tblGioHang.getSelectedRow();
            int maSPGioHang = Integer.parseInt(tblGioHang.getValueAt(rowDaChon, 1).toString());
            int soLuongSPGH = Integer.parseInt(tblGioHang.getValueAt(rowDaChon, 5).toString());
            
            for (int i = 0; i < tblDanhSachSP.getRowCount(); i++){
                int maSP = Integer.parseInt(tblDanhSachSP.getValueAt(i, 0).toString());
                if (maSP == maSPGioHang){
                    int soLuongSP = Integer.parseInt(tblDanhSachSP.getValueAt(i, 4).toString());
                    tblDanhSachSP.setValueAt(soLuongSP + soLuongSPGH , i, 4); //Thay đổi số lượng
                    modelGioHang.removeRow(tblGioHang.getSelectedRow());
                    break;
                }
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm muốn xóa!");
        }
        
        this.TinhTongTien();
    }
    
    private void XoaAllSPGioHang(){
        DefaultTableModel modelGioHang = (DefaultTableModel) tblGioHang.getModel();
        
        int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa tất cả sản phẩm khỏi giỏ hàng không?", "Xóa tất cả", JOptionPane.YES_NO_OPTION);
        
        if (luaChon == JOptionPane.YES_OPTION){
            for (int i = 0; i < tblGioHang.getRowCount(); i++){
                int maSPGioHang = Integer.parseInt(tblGioHang.getValueAt(i, 1).toString());
                
                for (int k = 0; k < tblDanhSachSP.getRowCount(); k++){
                    int maSP = Integer.parseInt(tblDanhSachSP.getValueAt(k, 0).toString());
                    
                    if (maSP == maSPGioHang){
                        int soLuongSPGH = Integer.parseInt(tblGioHang.getValueAt(i, 5).toString());
                        int soLuongSP = Integer.parseInt(tblDanhSachSP.getValueAt(k, 4).toString());
                        
                        tblDanhSachSP.setValueAt(soLuongSP + soLuongSPGH , k, 4); //Thay đổi số lượng
                    }
                }
            }
          
            modelGioHang.setRowCount(0); //Xóa tẩt cả row
        }
        
        this.TinhTongTien();
    }
    
    private void LoadMaHoaDon(){
        ArrayList<HoaDon_DTO> hoaDonArr = new ArrayList<HoaDon_DTO>();
        
        HoaDon_BUS HD_BUS = new HoaDon_BUS();
        hoaDonArr = HD_BUS.getAllHoaDon();
        
        HoaDon_DTO HD_DTO = new HoaDon_DTO();
        
        if (hoaDonArr.isEmpty() == false){
            HD_DTO = hoaDonArr.get(hoaDonArr.size() - 1); //Lấy row cuối trong arraylist
    
            txfMaHoaDon.setText(Integer.toString(HD_DTO.getMaHD() + 1)); //Tăng mã hóa đơn
        }
        else{
            txfMaHoaDon.setText(Integer.toString(1)); 
        }
     
    }
    
    private int GetMaCTHDNew(){
        ArrayList<ChiTietHoaDon_DTO> chitiethdArr = new ArrayList<ChiTietHoaDon_DTO>();
        
        HoaDon_BUS HD_BUS = new HoaDon_BUS();
        chitiethdArr = HD_BUS.getAllChiTietHoaDon();
        
        ChiTietHoaDon_DTO CTHD_DTO = new ChiTietHoaDon_DTO();
        
        if (chitiethdArr.isEmpty() == false){
            CTHD_DTO = chitiethdArr.get(chitiethdArr.size() - 1); //Lấy row cuối trong arraylist
            
            return CTHD_DTO.getMaChiTietHD() + 1;
            
        }
        else{
            return 1;
        }  
    } 
    
    private void ThanhToan(){
        SanPham_DTO sanphamDTO = new SanPham_DTO();
        HoaDon_DTO hoadonDTO = new HoaDon_DTO();
        ChiTietHoaDon_DTO chitiethdDTO = new ChiTietHoaDon_DTO();
        HoaDon_BUS hoadonBUS = new HoaDon_BUS();
        
        if (tblGioHang.getRowCount() != 0){
            if (txfDiaChiKH.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập địa chỉ khách hàng!");
                txfDiaChiKH.requestFocus();
            }
            else if (txfSDTKH.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(null, "Vui lòng nhập SDT khách hàng!");
                txfSDTKH.requestFocus();
            }else{
                //Thêm hóa đơn start 
                hoadonDTO.setMaHD(Integer.parseInt(txfMaHoaDon.getText()));
                int maKH = this.getMaKHTuCBB();
                hoadonDTO.setMaKH(maKH);
                int maNV = DangNhap_GUI.maNVOnline;
                hoadonDTO.setMaNV(maNV);
                
                hoadonDTO.setNgayLapHD(LocalDate.parse(txfNgayLapHD.getText()));
                
                int tongTienHD = CongCu.FormatTienStringSangInt(txfTongTien.getText());
                hoadonDTO.setTongTienHD(tongTienHD);
                
                try {
                    int resultHD = hoadonBUS.ThemHoaDon(hoadonDTO);
                    
                    //Thêm chi tiết hóa đơn và sửa số lượng SP start 
                    
                        
                        chitiethdDTO.setMaHD(Integer.parseInt(txfMaHoaDon.getText()));
                        chitiethdDTO.setTenNV(DangNhap_GUI.hoTenOnline);
                        chitiethdDTO.setTenKH(this.getTenKHTuCBB());
                        chitiethdDTO.setDiaChiGiaoHang(txfDiaChiKH.getText());
                        chitiethdDTO.setSdtGiaoHang(Integer.parseInt(txfSDTKH.getText()));
                        chitiethdDTO.setGhiChu(txfGhiChu.getText());
                    
                    for (int i=0; i < tblGioHang.getRowCount(); i++){
                        chitiethdDTO.setMaChiTietHD(this.GetMaCTHDNew());
                        chitiethdDTO.setMaSP(Integer.parseInt(tblGioHang.getValueAt(i, 1).toString()));
                        chitiethdDTO.setTenSP(tblGioHang.getValueAt(i, 2).toString());
                        chitiethdDTO.setSizeSP(Integer.parseInt(tblGioHang.getValueAt(i, 3).toString()));

                        int donGiaSP = CongCu.FormatTienStringSangInt(tblGioHang.getValueAt(i, 4).toString());
                        chitiethdDTO.setDonGiaSP(donGiaSP);

                        chitiethdDTO.setSoLuongSP(Integer.parseInt(tblGioHang.getValueAt(i, 5).toString()));

                        int thanhTienSP = CongCu.FormatTienStringSangInt(tblGioHang.getValueAt(i, 6).toString());
                        chitiethdDTO.setThanhTien(thanhTienSP);

                        //Cập nhật số lượng sản phẩm còn lại start
                        for (int k = 0; k < tblDanhSachSP.getRowCount(); k++){
                            int maSPGioHang = Integer.parseInt(tblGioHang.getValueAt(i, 1).toString());
                            int maSP = Integer.parseInt(tblDanhSachSP.getValueAt(k, 0).toString());
                            int soLuongSPConLai = Integer.parseInt(tblDanhSachSP.getValueAt(k, 4).toString());
                            if (maSPGioHang == maSP){
                                sanphamDTO.setSoLuongSP(soLuongSPConLai);
                                sanphamDTO.setMaSP(maSP);

                                int resultSLSP = hoadonBUS.CapNhatSLSP(sanphamDTO);

                                if (resultSLSP != 0) {
                                    System.out.println("Cập nhật số lượng thành công");
                                    //XoaInput();
                                }else {
                                    System.out.println("Cập nhật số lượng thất bại!");

                                }
                            }
                        }
                        //Cập nhật số lượng sản phẩm còn lại end
                        
                        
                        int resultCTHD = hoadonBUS.ThemChiTietHoaDon(chitiethdDTO);

                        if (resultCTHD != 0) {
                            System.out.println("Thêm chi tiết hóa đơn thành công");
                            //XoaInput();
                        }else {
                            System.out.println("Thêm chi tiết hóa đơn thất bại!");

                        }

                    }   
                    //Thêm chi tiết hóa đơn và sửa số lượng SP end
                    
                    if (resultHD != 0) {
                        int luaChon = JOptionPane.showConfirmDialog(null, "Xác nhận thanh toán?","Thanh toán", JOptionPane.YES_NO_OPTION);
                        if (luaChon == JOptionPane.YES_OPTION){
                        JOptionPane.showMessageDialog(null,"Thanh toán thành công!");
                        
                        //Clear start
                        LoadAllSanPhamToJTable();
                        LoadInfoKhachHang();
                        LoadMaHoaDon();
                        
                        DefaultTableModel modelGH = (DefaultTableModel) tblGioHang.getModel();
                        modelGH.setRowCount(0);
                        txfTamTinh.setText(Integer.toString(0));
                        txfTongTien.setText(Integer.toString(0));
                        txfNhaCungCap.setText("");
                        txfDanhMuc.setText("");
                        txfMieuTaSP.setText("");
                        lbAnhSP.setIcon(null);
                        lbAnhSP.setText("Ảnh sản phẩm");
                        //Clear end
                        }   
                        
                    }else {
                        System.out.println("Thanh toán thất bại!");
                        JOptionPane.showMessageDialog(null,"Thanh toán thất bại!");
                    }
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                //Thêm hóa đơn end
                
                
                
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng thêm sản phẩm vào giỏ hàng!");
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThemGioHang;
    private javax.swing.JButton btnXoaAllCart;
    private javax.swing.JButton btnXoaCart;
    private javax.swing.JComboBox<String> cbbTenKH;
    private javax.swing.JComboBox<String> cbbTimKiemSP;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbAnhSP;
    private javax.swing.JLabel lbBanHang;
    private javax.swing.JLabel lbDSSP;
    private javax.swing.JLabel lbDanhMuc;
    private javax.swing.JLabel lbDiaChiKH;
    private javax.swing.JLabel lbGhiChu;
    private javax.swing.JLabel lbGioHang;
    private javax.swing.JLabel lbMaGiamGia;
    private javax.swing.JLabel lbMaHoaDon;
    private javax.swing.JLabel lbMieuTaSP;
    private javax.swing.JLabel lbNgayLapHD;
    private javax.swing.JLabel lbNhaCungCap;
    private javax.swing.JLabel lbSDTKH;
    private javax.swing.JLabel lbTamTinh;
    private javax.swing.JLabel lbTenKhachHang;
    private javax.swing.JLabel lbTenNV;
    private javax.swing.JLabel lbTienGiam;
    private javax.swing.JLabel lbTimKH;
    private javax.swing.JLabel lbTimKiemSP;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JLabel lbsearch;
    private javax.swing.JTable tblDanhSachSP;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTextField txfDanhMuc;
    private javax.swing.JTextField txfDiaChiKH;
    private javax.swing.JTextArea txfGhiChu;
    private javax.swing.JTextField txfMaGiamGia;
    private javax.swing.JTextField txfMaHoaDon;
    private javax.swing.JTextArea txfMieuTaSP;
    private javax.swing.JTextField txfNgayLapHD;
    private javax.swing.JTextField txfNhaCungCap;
    private javax.swing.JTextField txfNhanVien;
    private javax.swing.JTextField txfSDTKH;
    private javax.swing.JTextField txfTamTinh;
    private javax.swing.JTextField txfTienGiam;
    private javax.swing.JTextField txfTimKH;
    private javax.swing.JTextField txfTimKiemSP;
    private javax.swing.JTextField txfTongTien;
    // End of variables declaration//GEN-END:variables
}

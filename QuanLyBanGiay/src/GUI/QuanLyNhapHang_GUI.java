/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.CongCu;
import BUS.PhieuNhap_BUS;
import BUS.SanPham_BUS;
import ConnectDB.XuLyDatabase;
import DTO.ChiTietPhieuNhap_DTO;
import DTO.PhieuNhap_DTO;
import DTO.SanPham_DTO;
import java.awt.BorderLayout;
import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Administrator
 */
public class QuanLyNhapHang_GUI extends javax.swing.JPanel {
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    /**
     * Creates new form QuanLyNhapHang_GUI
     */
    public QuanLyNhapHang_GUI() {
        initComponents();
        
        //Tab thêm phiếu nhập start
        LoadAllSanPhamToJTable();
        LoadMaPhieuNhap();
        addTimKiemCBB();
                
        txfNgayLapPhieu.setText(df.format(new Date()));
        txfNhanVien.setText(DangNhap_GUI.maNVOnline + "-" + DangNhap_GUI.hoTenOnline);
        
        TinhTongSL();
        //Tab thêm phiếu nhập end
        
        //Tab quản lý phiếu nhập
        LoadAllPhieuNhapToJTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbQuanLyNhanVien = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnQuanLyPhieuNhap = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSPN = new javax.swing.JTable();
        lbDanhSachPN = new javax.swing.JLabel();
        txfTimKiem = new javax.swing.JTextField();
        lbTimKiem = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jdTuNgay = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jdDenNgay = new com.toedter.calendar.JDateChooser();
        cbbTimKiem = new javax.swing.JComboBox<>();
        btnXoaPN = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCTPN = new javax.swing.JTable();
        lbCTPN = new javax.swing.JLabel();
        pnThemPhieuNhap = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lbMaPN = new javax.swing.JLabel();
        lbNgayLapPhieu = new javax.swing.JLabel();
        lbNhanVien = new javax.swing.JLabel();
        txfNgayLapPhieu = new javax.swing.JTextField();
        txfMaPN = new javax.swing.JTextField();
        txfNhanVien = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lbDSSP = new javax.swing.JLabel();
        lbTimKiemSP = new javax.swing.JLabel();
        txfTimKiemSP = new javax.swing.JTextField();
        cbbTimKiemSP = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCTNH = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        lbDSSP1 = new javax.swing.JLabel();
        btnXoaCart = new javax.swing.JButton();
        btnXoaAllCart = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        lbAnhSP = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbTongSLNhap = new javax.swing.JLabel();
        txfTongSLNhap = new javax.swing.JTextField();
        btnNhapHang = new javax.swing.JButton();

        lbQuanLyNhanVien.setBackground(new java.awt.Color(102, 102, 255));
        lbQuanLyNhanVien.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        lbQuanLyNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-database-import-24.png"))); // NOI18N
        lbQuanLyNhanVien.setText("QUẢN LÝ NHẬP HÀNG");
        lbQuanLyNhanVien.setToolTipText("");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblDSPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Mã nhân viên", "Ngày lập phiếu", "Tổng số lượng nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDSPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSPNMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSPN);

        lbDanhSachPN.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbDanhSachPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-database-import-24.png"))); // NOI18N
        lbDanhSachPN.setText("Danh sách phiếu nhập");

        txfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTimKiemKeyReleased(evt);
            }
        });

        lbTimKiem.setText("Tìm kiếm:");

        jLabel3.setText("Lọc:");

        jLabel4.setText("từ ngày");

        jdTuNgay.setDateFormatString("dd-MM-yyyy");
        jdTuNgay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdTuNgayPropertyChange(evt);
            }
        });

        jLabel5.setText("đến ngày");

        jdDenNgay.setDateFormatString("dd-MM-yyyy");
        jdDenNgay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdDenNgayPropertyChange(evt);
            }
        });

        cbbTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã phiếu nhập", "Mã nhân viên" }));
        cbbTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimKiemActionPerformed(evt);
            }
        });

        btnXoaPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-20.png"))); // NOI18N
        btnXoaPN.setText("Xóa");
        btnXoaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(lbDanhSachPN)
                        .addGap(424, 424, 424))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(lbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jdTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jdDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btnXoaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(238, 238, 238))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(lbDanhSachPN, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCTPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblCTPN);
        if (tblCTPN.getColumnModel().getColumnCount() > 0) {
            tblCTPN.getColumnModel().getColumn(0).setMaxWidth(250);
            tblCTPN.getColumnModel().getColumn(1).setMaxWidth(300);
            tblCTPN.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        lbCTPN.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-more-details-20.png"))); // NOI18N
        lbCTPN.setText("Chi tiết phiếu nhập");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(lbCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(lbCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnQuanLyPhieuNhapLayout = new javax.swing.GroupLayout(pnQuanLyPhieuNhap);
        pnQuanLyPhieuNhap.setLayout(pnQuanLyPhieuNhapLayout);
        pnQuanLyPhieuNhapLayout.setHorizontalGroup(
            pnQuanLyPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuanLyPhieuNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQuanLyPhieuNhapLayout.createSequentialGroup()
                .addContainerGap(236, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        pnQuanLyPhieuNhapLayout.setVerticalGroup(
            pnQuanLyPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuanLyPhieuNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý phiếu nhập", pnQuanLyPhieuNhap);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbMaPN.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbMaPN.setText("Mã phiếu nhập:");

        lbNgayLapPhieu.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbNgayLapPhieu.setText("Ngày lập phiếu:");

        lbNhanVien.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbNhanVien.setText("Nhân viên:");

        txfNgayLapPhieu.setEditable(false);

        txfMaPN.setEditable(false);

        txfNhanVien.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lbMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(lbNgayLapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfNgayLapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfNgayLapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNgayLapPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbDSSP.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbDSSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-product-20.png"))); // NOI18N
        lbDSSP.setText("Danh sách sản phẩm");

        lbTimKiemSP.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbTimKiemSP.setText("Tìm kiếm:");

        txfTimKiemSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTimKiemSPKeyReleased(evt);
            }
        });

        cbbTimKiemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTimKiemSPActionPerformed(evt);
            }
        });

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm", "Size", "Đơn giá", "Số lượng hiện có"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        tblSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSanPhamKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(0).setMaxWidth(50);
            tblSanPham.getColumnModel().getColumn(1).setMaxWidth(300);
            tblSanPham.getColumnModel().getColumn(2).setMaxWidth(50);
            tblSanPham.getColumnModel().getColumn(3).setMaxWidth(150);
            tblSanPham.getColumnModel().getColumn(4).setMaxWidth(150);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(lbDSSP, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(cbbTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(lbDSSP)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfTimKiemSP)
                    .addComponent(lbTimKiemSP)
                    .addComponent(cbbTimKiemSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCTNH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Số lượng nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblCTNH);
        if (tblCTNH.getColumnModel().getColumnCount() > 0) {
            tblCTNH.getColumnModel().getColumn(0).setMaxWidth(50);
            tblCTNH.getColumnModel().getColumn(1).setMaxWidth(70);
            tblCTNH.getColumnModel().getColumn(2).setMaxWidth(200);
            tblCTNH.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        lbDSSP1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lbDSSP1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-more-details-20.png"))); // NOI18N
        lbDSSP1.setText("Chi tiết nhập hàng");

        btnXoaCart.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoaCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-20.png"))); // NOI18N
        btnXoaCart.setText("Xóa");
        btnXoaCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCartActionPerformed(evt);
            }
        });

        btnXoaAllCart.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoaAllCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-table-20.png"))); // NOI18N
        btnXoaAllCart.setText("Xóa tất cả");
        btnXoaAllCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaAllCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lbDSSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnXoaAllCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoaCart)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(lbDSSP1)
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoaCart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaAllCart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-wide-long-right-arrow-23.png"))); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbAnhSP.setText("Ảnh sản phẩm");
        lbAnhSP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(lbAnhSP, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbAnhSP, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbTongSLNhap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTongSLNhap.setText("Tổng số lượng nhập:");

        btnNhapHang.setBackground(new java.awt.Color(0, 204, 102));
        btnNhapHang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNhapHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-database-import-24.png"))); // NOI18N
        btnNhapHang.setText("Nhập hàng");
        btnNhapHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lbTongSLNhap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNhapHang, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(txfTongSLNhap))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTongSLNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfTongSLNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnThemPhieuNhapLayout = new javax.swing.GroupLayout(pnThemPhieuNhap);
        pnThemPhieuNhap.setLayout(pnThemPhieuNhapLayout);
        pnThemPhieuNhapLayout.setHorizontalGroup(
            pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                .addGroup(pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                        .addGroup(pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(29, 29, 29))
        );
        pnThemPhieuNhapLayout.setVerticalGroup(
            pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, Short.MAX_VALUE)))
                    .addGroup(pnThemPhieuNhapLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thêm phiếu nhập", pnThemPhieuNhap);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(369, 369, 369))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txfTimKiemSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTimKiemSPKeyReleased
        TimKiemSP();
    }//GEN-LAST:event_txfTimKiemSPKeyReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ThemSLSP();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCartActionPerformed
       xoaSPKhoiCTPN();
    }//GEN-LAST:event_btnXoaCartActionPerformed

    private void btnXoaAllCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaAllCartActionPerformed
      XoaAllSPKhoiCTNH();
    }//GEN-LAST:event_btnXoaAllCartActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        showRowClicked();
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void tblSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSanPhamKeyReleased
        showRowClicked();
    }//GEN-LAST:event_tblSanPhamKeyReleased

    private void cbbTimKiemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimKiemSPActionPerformed
        TimKiemSP();
    }//GEN-LAST:event_cbbTimKiemSPActionPerformed

    private void btnNhapHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapHangActionPerformed
        NhapHang();
    }//GEN-LAST:event_btnNhapHangActionPerformed

    private void txfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTimKiemKeyReleased
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemPhieuNhap();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayPN();
        }
    }//GEN-LAST:event_txfTimKiemKeyReleased

    private void jdTuNgayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdTuNgayPropertyChange
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemPhieuNhap();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayPN();
        }
    }//GEN-LAST:event_jdTuNgayPropertyChange

    private void jdDenNgayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdDenNgayPropertyChange
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemPhieuNhap();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayPN();
        }
    }//GEN-LAST:event_jdDenNgayPropertyChange

    private void cbbTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTimKiemActionPerformed
        if ((jdTuNgay.getDate() == null) | (jdDenNgay.getDate() == null)){
            TimKiemPhieuNhap();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
            locTheoNgayPN();
        }

        if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
            locTheoNgayPN();
        }
    }//GEN-LAST:event_cbbTimKiemActionPerformed

    private void btnXoaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPNActionPerformed
        XoaPN();
    }//GEN-LAST:event_btnXoaPNActionPerformed

    private void tblDSPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSPNMouseClicked
       showChiTietPN();
    }//GEN-LAST:event_tblDSPNMouseClicked

    //Tab Thêm phiếu nhập start
    private void LoadAllSanPhamToJTable() {
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        DefaultTableModel modelSP = (DefaultTableModel) tblSanPham.getModel();
        modelSP.setRowCount(0); //Xóa dữ liệu đang có trong jtable

        SanPham_BUS SP_BUS = new SanPham_BUS();

        sanphamArr = SP_BUS.getAllSanPham();

        SanPham_DTO SP_DTO = new SanPham_DTO();

        for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i);

            int maSP = SP_DTO.getMaSP();
            String tenSP = SP_DTO.getTenSP();
            int sizeSP = SP_DTO.getSizeSP();
            int soLuongSP = SP_DTO.getSoLuongSP();
            int donGia = SP_DTO.getDonGiaSP();
            String donGiaStr = CongCu.FormatTienIntSangString(donGia);
            
            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                Object[] row = {maSP, tenSP, sizeSP, donGiaStr, soLuongSP};
                modelSP.addRow(row);
            }

        }
    }
    
    private int GetMaCTPNNew(){
        ArrayList<ChiTietPhieuNhap_DTO> chitietpnArr = new ArrayList<ChiTietPhieuNhap_DTO>();
        
        PhieuNhap_BUS PN_BUS = new PhieuNhap_BUS();
        chitietpnArr = PN_BUS.getAllChiTietPhieuNhap();
        
        ChiTietPhieuNhap_DTO CTPN_DTO = new ChiTietPhieuNhap_DTO();
        
        if (chitietpnArr.isEmpty() == false){
            CTPN_DTO = chitietpnArr.get(chitietpnArr.size() - 1); //Lấy row cuối trong arraylist
            
            return CTPN_DTO.getMaCTPN() + 1;
            
        }
        else{
            return 1;
        }  
    }
    
    private void LoadMaPhieuNhap(){
        ArrayList<PhieuNhap_DTO> phieunhapArr = new ArrayList<PhieuNhap_DTO>();
        
        PhieuNhap_BUS PN_BUS = new PhieuNhap_BUS();
        phieunhapArr = PN_BUS.getAllPhieuNhap();
        
        PhieuNhap_DTO PN_DTO = new PhieuNhap_DTO();
        
        if (phieunhapArr.isEmpty() == false){
            PN_DTO = phieunhapArr.get(phieunhapArr.size() - 1 ); //Lấy row cuối trong arraylist
            
            txfMaPN.setText(Integer.toString(PN_DTO.getMaPhieuNhap() + 1)); //Tăng mã phiếu nhập
           
        }
        else{
            txfMaPN.setText(Integer.toString(1)); 
        }
     
    }
    
    private void ThemSLSP(){
        DefaultTableModel modelCTNH = (DefaultTableModel)tblCTNH.getModel();
        int soLuongThem = 0;
        int checkInput = 0;
        int checkDaCo = 0;
        
        if (tblSanPham.getSelectedRow() != -1 ){
            //int giaTriSLSP = Integer.parseInt(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 4).toString());
            
            do{
                checkInput = 0;
                String soLuongThemStr = JOptionPane.showInputDialog("Nhập số lượng: ");
                
                if (soLuongThemStr != null){
                    
                    try{
                        soLuongThem = Integer.parseInt(soLuongThemStr);
                    }catch (NumberFormatException e){ //Kiểm tra nhập số
                        JOptionPane.showMessageDialog(null, "Vui lòng nhập số nguyên!"); 
                        checkInput = 1;
                    }
                        if ((soLuongThem <= 1000) && (soLuongThem != 0) ){
                            
                            //Thêm vào giỏ hàng 
                            int maSP = Integer.parseInt(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());    
                            String tenSP = tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 1).toString();
                            
                            //Kiểm tra sản phẩm đã tồn tại trong giỏ hàng hay chưa, nếu có thì tăng số lượng
                            if (tblCTNH.getRowCount() == 0){
                                Object[] row = {tblCTNH.getRowCount() + 1, maSP, tenSP, soLuongThem};
                                modelCTNH.addRow(row);
                            }else{
                                checkDaCo = 0;
                                for (int i = 0; i < tblCTNH.getRowCount(); i++){
                                    int maSPGioHang = Integer.parseInt(tblCTNH.getValueAt(i, 1).toString());
                                    if (maSP == maSPGioHang){
                                        checkDaCo = 1;
                                        int soLuongDaCo = Integer.parseInt(tblCTNH.getValueAt(i, 3).toString());
                                        tblCTNH.setValueAt(soLuongDaCo + soLuongThem, i, 3); //Thay đổi số lượng
                                       
                                        break;
                                    }
                                }
                                if (checkDaCo != 1){
                                    Object[] row = {tblCTNH.getRowCount() + 1, maSP, tenSP,  soLuongThem};
                                    modelCTNH.addRow(row);
                                }
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(null, "Số lượng nhập phải <= 1000");
                            checkInput = 1;
                        }
                    
                }else{
                    checkInput = 0; //Nếu bấm Thoát thì thoát vòng lặp
                }
            }while (checkInput == 1); //Vòng lặp check nhập vào
                  
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm muốn thêm!");
        }
        
        this.TinhTongSL();
    }
    
    private void TinhTongSL(){
        int tongSL = 0;
        
        for (int i = 0; i < tblCTNH.getRowCount(); i++){
            String soLuongThemStr = tblCTNH.getValueAt(i, 3).toString();
            int soLuongThem = CongCu.FormatTienStringSangInt(soLuongThemStr);
            
            tongSL += soLuongThem;
        }
      
        
        //Gắn vào textfield
        txfTongSLNhap.setText(Integer.toString(tongSL));
         
    }
    
    private void xoaSPKhoiCTPN(){
        DefaultTableModel modelCTNH = (DefaultTableModel) tblCTNH.getModel();
        
        if (tblCTNH.getSelectedRow() != -1){
            int rowDaChon = tblCTNH.getSelectedRow();
            int maSPCTNH = Integer.parseInt(tblCTNH.getValueAt(rowDaChon, 1).toString());
            int soLuongSPNH = Integer.parseInt(tblCTNH.getValueAt(rowDaChon, 3).toString());
            
            modelCTNH.removeRow(tblCTNH.getSelectedRow());
            
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng muốn xóa!");
        }
        
        this.TinhTongSL();
    }
    
    private void XoaAllSPKhoiCTNH(){
        DefaultTableModel modelCTNH = (DefaultTableModel) tblCTNH.getModel();
        
        int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa tất cả sản phẩm không?", "Xóa tất cả", JOptionPane.YES_NO_OPTION);
        
        if (luaChon == JOptionPane.YES_OPTION){
            modelCTNH.setRowCount(0); //Xóa tẩt cả row
        }
        
        this.TinhTongSL();
    }
    
    private void showRowClicked() {
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
      
        int giaTriMaSP = Integer.parseInt(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
    
        System.out.println(giaTriMaSP);//test
        
        SanPham_BUS SP_BUS = new SanPham_BUS();
        
        sanphamArr = SP_BUS.getAllSanPham();
        
        SanPham_DTO SP_DTO = new SanPham_DTO();
        
        for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i); 
            
            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                if (SP_DTO.getMaSP() == giaTriMaSP){ 
                    lbAnhSP.setIcon(showImageToJLabel(null, SP_DTO.getAnhSP()));
                    
                }     
            }
        }
        
    }
    
    private ImageIcon showImageToJLabel(String ImgPath, byte[] anhNV) {
        ImageIcon myImg = null;
        
        if (ImgPath != null){
            myImg = new ImageIcon(ImgPath); //Gán đường dẫn mới (ImgPath) nếu chưa có đường dẫn
        }else{
            myImg = new ImageIcon(anhNV); //Lấy ảnh row được click
        }

        Image img = myImg.getImage();
        Image img2 = img.getScaledInstance(lbAnhSP.getWidth(), lbAnhSP.getHeight(), Image.SCALE_SMOOTH); //Gắn ảnh vào lblNhanVienImage

        ImageIcon image = new ImageIcon(img2);
        return image;
    }
    
    private void TimKiem(String sqlTimKiem, String valueSearch) {
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        DefaultTableModel modelSP = (DefaultTableModel) tblSanPham.getModel();
        modelSP.setRowCount(0); //Xóa dữ liệu đang có trong jtable
        
        SanPham_BUS SP_BUS = new SanPham_BUS();

        sanphamArr = SP_BUS.timKiemSP(sqlTimKiem, valueSearch);

        SanPham_DTO SP_DTO = new SanPham_DTO();

        for (int i = 0; i < sanphamArr.size(); i++) {
            SP_DTO = sanphamArr.get(i);

            int maSP = SP_DTO.getMaSP();
            String tenSP = SP_DTO.getTenSP();
            int sizeSP = SP_DTO.getSizeSP();
            int soLuongSP = SP_DTO.getSoLuongSP();
            int donGia = SP_DTO.getDonGiaSP();
            String donGiaStr = CongCu.FormatTienIntSangString(donGia);
            
            if (SP_DTO.getTrangThaiSP().equals("Mở")) {
                Object[] row = {maSP, tenSP, sizeSP, donGiaStr, soLuongSP};
                modelSP.addRow(row);
            }

        }
    }
    
    private void addTimKiemCBB(){
        cbbTimKiemSP.addItem("Tên sản phẩm");
        cbbTimKiemSP.addItem("Mã sản phẩm");
        cbbTimKiemSP.addItem("Size");
        cbbTimKiemSP.addItem("Đơn giá");
        cbbTimKiemSP.addItem("Số lượng");
    }
    
    private void TimKiemSP(){
        String optionTimKiem= (String) cbbTimKiemSP.getSelectedItem();
        System.out.println("Đã chọn: "+ optionTimKiem);//Test
        
        switch (optionTimKiem){
           case "Tên sản phẩm": {
                String sqlTimKiem = "tenSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Mã sản phẩm": {               
                String sqlTimKiem = "maSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Size": {               
                String sqlTimKiem = "sizeSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Đơn giá": {               
                String sqlTimKiem = "donGiaSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }
           case "Số lượng": {               
                String sqlTimKiem = "soLuongSP";
                TimKiem(sqlTimKiem, txfTimKiemSP.getText());           
                break;
           }     
       }
    }
    
    private void NhapHang(){
        SanPham_DTO sanphamDTO = new SanPham_DTO();
        PhieuNhap_DTO phieunhapDTO = new PhieuNhap_DTO();
        ChiTietPhieuNhap_DTO chitietpnDTO = new ChiTietPhieuNhap_DTO();
        
        PhieuNhap_BUS phieunhapBUS = new PhieuNhap_BUS();
        
        if (tblCTNH.getRowCount() != 0){
                //Thêm phiếu nhập start
                phieunhapDTO.setMaPhieuNhap(Integer.parseInt(txfMaPN.getText()));
                
                phieunhapDTO.setNgayLapPhieu(LocalDate.parse(txfNgayLapPhieu.getText()));
                int maNV = DangNhap_GUI.maNVOnline;
                phieunhapDTO.setMaNV(maNV);
                
                int tongSL = Integer.parseInt(txfTongSLNhap.getText());
                phieunhapDTO.setTongSLNhap(tongSL);
                
                try {
                    int resultPN = phieunhapBUS.ThemPhieuNhap(phieunhapDTO);
                    //Thêm chi tiết phiếu nhập và sửa số lượng SP start 
                    chitietpnDTO.setMaPhieuNhap(Integer.parseInt(txfMaPN.getText()));
                        
                    for (int i=0; i < tblCTNH.getRowCount(); i++){
                        chitietpnDTO.setMaCTPN(this.GetMaCTPNNew());
                        chitietpnDTO.setMaSP(Integer.parseInt(tblCTNH.getValueAt(i, 1).toString()));
                        
                        chitietpnDTO.setSoLuongNhap(Integer.parseInt(tblCTNH.getValueAt(i, 3).toString()));

                        //Cập nhật số lượng sản phẩm còn lại start
                        for (int k = 0; k < tblSanPham.getRowCount(); k++){
                            int maSPGioHang = Integer.parseInt(tblCTNH.getValueAt(i, 1).toString());
                            int maSP = Integer.parseInt(tblSanPham.getValueAt(k, 0).toString());
                            
                            int soLuongSPThem = Integer.parseInt(tblCTNH.getValueAt(i, 3).toString());
                            
                            if (maSPGioHang == maSP){
                                sanphamDTO.setSoLuongSP(soLuongSPThem);
                                sanphamDTO.setMaSP(maSP);

                                int resultSLSP = phieunhapBUS.CapNhatSLSP(sanphamDTO);

                                if (resultSLSP != 0) {
                                    System.out.println("Cập nhật số lượng thành công");
                                    //XoaInput();
                                }else {
                                    System.out.println("Cập nhật số lượng thất bại!");

                                }
                            }
                        }
                        //Cập nhật số lượng sản phẩm còn lại end
                        
                        int resultCTPN = phieunhapBUS.ThemChiTietPhieuNhap(chitietpnDTO);

                        if (resultCTPN != 0) {
                            System.out.println("Thêm chi tiết phiếu nhập thành công");
                            //XoaInput();
                        }else {
                            System.out.println("Thêm chi tiết phiếu nhập thất bại!");

                        }

                    } 
                    //Thêm chi tiết hóa đơn và sửa số lượng SP end
                    
                    if (resultPN != 0) {
                        int luaChon = JOptionPane.showConfirmDialog(null, "Xác nhận nhập hàng?","Nhập hàng", JOptionPane.YES_NO_OPTION);
                        if (luaChon == JOptionPane.YES_OPTION){
                        JOptionPane.showMessageDialog(null,"Nhập hàng thành công!");
                        
                        //Clear start
                        LoadAllSanPhamToJTable();
                        LoadMaPhieuNhap();
                        txfTongSLNhap.setText(Integer.toString(0));
                        DefaultTableModel modelCTPN = (DefaultTableModel) tblCTNH.getModel();
                        modelCTPN.setRowCount(0);
                        lbAnhSP.setIcon(null);
                        lbAnhSP.setText("Ảnh sản phẩm");
                        //Clear end
                        }   
                        
                    }else {
                        System.out.println("Nhập hàng thất bại!");
                        JOptionPane.showMessageDialog(null,"Nhập hàng thất bại!");
                    }
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                //Thêm phiếu nhập end
                 
            }else{
            JOptionPane.showMessageDialog(null, "Vui lòng thêm sản phẩm trước khi nhập hàng!");
            }
        
    }
    //Tab thêm phiếu nhập end
    
    //Tab quản lý phiếu nhập start
    private void LoadAllPhieuNhapToJTable() {
        ArrayList<PhieuNhap_DTO> phieunhapArr = new ArrayList<PhieuNhap_DTO>();
        DefaultTableModel modelPN = (DefaultTableModel) tblDSPN.getModel();
        modelPN.setRowCount(0); //Xóa dữ liệu đang có trong jtable

        PhieuNhap_BUS PN_BUS = new PhieuNhap_BUS();

        phieunhapArr = PN_BUS.getAllPhieuNhap();

        PhieuNhap_DTO PN_DTO = new PhieuNhap_DTO();

        for (int i = 0; i < phieunhapArr.size(); i++) {
            PN_DTO = phieunhapArr.get(i);

            int maPhieuNhap = PN_DTO.getMaPhieuNhap();
            int maNV = PN_DTO.getMaNV();
            LocalDate ngayLapPhieu = PN_DTO.getNgayLapPhieu();
            int tongSLNhap = PN_DTO.getTongSLNhap();
           
            if (PN_DTO.getTrangThaiPN().equals("Mở")){
                Object[] row = {maPhieuNhap, maNV, ngayLapPhieu, tongSLNhap};
                modelPN.addRow(row);
            }
       
        }
    }
    
    private void showChiTietPN(){
        int ViTri = tblDSPN.getSelectedRow();
        
        int maPNDaChon = Integer.parseInt(tblDSPN.getValueAt(ViTri, 0).toString());
        LoadCTPNTheoMaPN(maPNDaChon);
        
        //loadReportToJPanel(maPNDaChon);
        
        
    }
    
    private void LoadCTPNTheoMaPN(int maPNDaChon){
        ArrayList<ChiTietPhieuNhap_DTO> ctpnArr = new ArrayList<ChiTietPhieuNhap_DTO>();
        ArrayList<SanPham_DTO> sanphamArr = new ArrayList<SanPham_DTO>();
        String tenSP = "";
        
        DefaultTableModel modelCTPN = (DefaultTableModel)tblCTPN.getModel();
        modelCTPN.setRowCount(0); //Xóa dữ liệu đang có trong jtable
        
        PhieuNhap_BUS phieunhapBUS = new PhieuNhap_BUS();
        ctpnArr = phieunhapBUS.getAllChiTietPhieuNhap();
        
        SanPham_BUS sanphamBUS = new SanPham_BUS();
        sanphamArr = sanphamBUS.getAllSanPham();
        
        ChiTietPhieuNhap_DTO ctpnDTO = new ChiTietPhieuNhap_DTO();
        
        for (int i=0; i < ctpnArr.size(); i++ ){
                ctpnDTO = ctpnArr.get(i);
                
                int maPhieuNhap = ctpnDTO.getMaPhieuNhap();
                int maSP = ctpnDTO.getMaSP(); 
                for (int k = 0; k < sanphamArr.size() ; k++){
                    if (maSP == sanphamArr.get(k).getMaSP()){
                        tenSP = sanphamArr.get(k).getTenSP();
                    }
                }
                
                int soLuongNhap = ctpnDTO.getSoLuongNhap();
             
                if ( maPhieuNhap == maPNDaChon ){
                    Object[] row = {maSP, tenSP, soLuongNhap};
                    modelCTPN.addRow(row);
                }

        }
          
    }
    
//    private void loadReportToJPanel(int maPNDaChon){
//        XuLyDatabase xuLyDB = new XuLyDatabase();
//        Connection conn = xuLyDB.openConnection();
//        
//        try {
//            
//            HashMap hm = new HashMap();
//            hm.put("maPhieuNhap", maPNDaChon);
//
//            pnXuatPhieuNhap.removeAll();
//            pnXuatPhieuNhap.repaint();
//            pnXuatPhieuNhap.revalidate();
//
//            //JasperDesign jdesign = JRXmlLoader.load("QuanLyBanGiay/src/GUI/rpXuatHoaDon.jrxml");
//            File fileTemp = new File("src\\GUI\\rpXuatPhieuNhap.jrxml"); //New File lay relative path de get absolute path
//            JasperReport jreport = JasperCompileManager.compileReport(fileTemp.getAbsolutePath());
//            JasperPrint jprint = JasperFillManager.fillReport(jreport, hm, conn);
//            
//            JRViewer viewHD = new JRViewer(jprint);
//            viewHD.setZoomRatio((float) 0.51); //Set cho vua panel
//            
//            pnXuatPhieuNhap.setLayout(new BorderLayout());
//            pnXuatPhieuNhap.add(viewHD);
//            
//            
//        } catch (JRException ex) {
//            System.out.println(ex);
//        }
//        
//        //Dong ket noi
//        finally{
//            xuLyDB.closeConnection(conn);
//        }
//        
//        
//    }
    
    private void XuatPhieuNhap(int maPNDaChon){
        XuLyDatabase xuLyDB = new XuLyDatabase();
        Connection conn = xuLyDB.openConnection();
        
        try {
            
            HashMap hm = new HashMap();
            hm.put("maPhieuNhap", maPNDaChon);

            File fileTemp = new File("src//GUI//rpXuatPhieuNhap.jrxml"); //New File lay relative path de get absolute path
            JasperReport jreport = JasperCompileManager.compileReport(fileTemp.getAbsolutePath());
            JasperPrint jprint = JasperFillManager.fillReport(jreport, hm, conn);
            
            JasperViewer.viewReport(jprint, false);
         
        } catch (Exception ex) {
            System.out.print(ex);
        }
        
        //Dong ket noi
        finally{
            xuLyDB.closeConnection(conn);
        }
    }
    
    //Tìm kiếm start 
    private void TimKiemPN(String sqlTimKiem, String valueSearch){
        PhieuNhap_BUS phieunhapBUS = new PhieuNhap_BUS();
        
        ArrayList<PhieuNhap_DTO> phieunhapArr = phieunhapBUS.timKiemPN(sqlTimKiem, valueSearch);
        DefaultTableModel modelPN = (DefaultTableModel)tblDSPN.getModel();
        modelPN.setRowCount(0);
        
        PhieuNhap_DTO phieunhapDTO = new PhieuNhap_DTO();
        
        for (int i = 0; i < phieunhapArr.size(); i++) {
            phieunhapDTO = phieunhapArr.get(i);

            int maPhieuNhap = phieunhapDTO.getMaPhieuNhap();
            int maNV = phieunhapDTO.getMaNV();
            LocalDate ngayLapPhieu = phieunhapDTO.getNgayLapPhieu();
            int tongSLNhap = phieunhapDTO.getTongSLNhap();
           
            if (phieunhapDTO.getTrangThaiPN().equals("Mở")){
                Object[] row = {maPhieuNhap, maNV, ngayLapPhieu, tongSLNhap};
                modelPN.addRow(row);
            }
       
        } 
    }
    
    private void TimKiemPhieuNhap(){
        String optionTimKiem= (String) cbbTimKiem.getSelectedItem();
        System.out.println("Đã chọn: "+ optionTimKiem);//Test
        
        switch (optionTimKiem){
           case "Mã phiếu nhập": {
                String sqlTimKiem = "maPhieuNhap";
                TimKiemPN(sqlTimKiem, txfTimKiem.getText());           
                break;
           }
           case "Mã nhân viên": {               
                String sqlTimKiem = "maNV";
                TimKiemPN(sqlTimKiem, txfTimKiem.getText());           
                break;
           }
              
       }
    }
    
    private void locTheoNgayPN(){
        PhieuNhap_BUS phieunhapBUS = new PhieuNhap_BUS();
        ArrayList<PhieuNhap_DTO> phieunhapArr = new ArrayList<PhieuNhap_DTO>();
                
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        //Tìm kiếm kết hợp start
        String getCBB = cbbTimKiem.getSelectedItem().toString();
        System.out.println(getCBB); //test
        
        if (txfTimKiem.getText().isEmpty() == false){
            
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                System.out.println("Tu ngay: " + tuNgay);
                String denNgay = df.format(jdDenNgay.getDate());
                System.out.println("Den ngay: " + denNgay);
                
                switch (getCBB){
                    case "Mã phiếu nhập": {
                        String valueCBB = "maPhieuNhap";
                        phieunhapArr = phieunhapBUS.locTheoNgayPN(tuNgay, denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã nhân viên": {
                        String valueCBB = "maNV";
                        phieunhapArr = phieunhapBUS.locTheoNgayPN(tuNgay, denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    
                }
                
            }
            
            //Lọc bé hơn kết hợp start
            if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
                String denNgay = df.format(jdDenNgay.getDate());

                switch (getCBB){
                    case "Mã phiếu nhập": {
                        String valueCBB = "maPhieuNhap";
                        phieunhapArr = phieunhapBUS.locBeHonBang(denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã nhân viên": {
                        String valueCBB = "maNV";
                        phieunhapArr = phieunhapBUS.locBeHonBang(denNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    
                }
            }
            //Lọc bé hơn kết hợp end
            //Lọc lớn hơn kết hợp start
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                
                switch (getCBB){
                    case "Mã phiếu nhập": {
                        String valueCBB = "maPhieuNhap";
                        phieunhapArr = phieunhapBUS.locLonHonBang(tuNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    case "Mã nhân viên": {
                        String valueCBB = "maNV";
                        phieunhapArr = phieunhapBUS.locLonHonBang(tuNgay, valueCBB, txfTimKiem.getText());
                        break;
                    }
                    
                }
            }
        
        }else{
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() != null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                String denNgay = df.format(jdDenNgay.getDate());
                
                phieunhapArr = phieunhapBUS.locTheoNgayPN(tuNgay, denNgay);
            }
            if ((jdTuNgay.getDate() == null) && (jdDenNgay.getDate() != null)){
                String denNgay = df.format(jdDenNgay.getDate());
                
                phieunhapArr = phieunhapBUS.locBeHonBang(denNgay);
            }
            if ((jdTuNgay.getDate() != null) && (jdDenNgay.getDate() == null)){
                String tuNgay = df.format(jdTuNgay.getDate());
                
                phieunhapArr = phieunhapBUS.locLonHonBang(tuNgay);
            }
        }
        
        DefaultTableModel modelPN = (DefaultTableModel)tblDSPN.getModel();
        modelPN.setRowCount(0);
        
        PhieuNhap_DTO PN_DTO = new PhieuNhap_DTO();

        for (int i = 0; i < phieunhapArr.size(); i++) {
            PN_DTO = phieunhapArr.get(i);

            int maPhieuNhap = PN_DTO.getMaPhieuNhap();
            int maNV = PN_DTO.getMaNV();
            LocalDate ngayLapPhieu = PN_DTO.getNgayLapPhieu();
            int tongSLNhap = PN_DTO.getTongSLNhap();
           
            if (PN_DTO.getTrangThaiPN().equals("Mở")){
                Object[] row = {maPhieuNhap, maNV, ngayLapPhieu, tongSLNhap};
                modelPN.addRow(row);
            }
       
        } 
        
    }
    
    private void XoaPN(){
        DefaultTableModel modelPN = (DefaultTableModel) tblDSPN.getModel();
        PhieuNhap_DTO phieunhapDTO = new PhieuNhap_DTO();
        
        if (tblDSPN.getSelectedRow() != -1){
            int ViTri = tblDSPN.getSelectedRow();
            phieunhapDTO.setMaPhieuNhap(Integer.parseInt(tblDSPN.getValueAt(ViTri, 0).toString()));
            
            PhieuNhap_BUS phieunhapBUS = new PhieuNhap_BUS();
            
            int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa phiếu nhập này không?", "Xác nhận", JOptionPane.YES_NO_OPTION );
            
            if (luaChon == JOptionPane.YES_OPTION){
               try{
               int result = phieunhapBUS.XoaPN(phieunhapDTO);

               if (result != 0) {
                    JOptionPane.showMessageDialog(null,"Xóa phiếu nhập thành công!");
                    //XoaInput();
               }else {
                    JOptionPane.showMessageDialog(null,"Xóa phiếu nhập thất bại!"); 
               }

                LoadAllPhieuNhapToJTable();

               } catch (Exception ex) {
                    ex.printStackTrace();
               }

            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Vui lòng chọn phiếu nhập muốn xóa!");
        }
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNhapHang;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoaAllCart;
    private javax.swing.JButton btnXoaCart;
    private javax.swing.JButton btnXoaPN;
    private javax.swing.JComboBox<String> cbbTimKiem;
    private javax.swing.JComboBox<String> cbbTimKiemSP;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdDenNgay;
    private com.toedter.calendar.JDateChooser jdTuNgay;
    private javax.swing.JLabel lbAnhSP;
    private javax.swing.JLabel lbCTPN;
    private javax.swing.JLabel lbDSSP;
    private javax.swing.JLabel lbDSSP1;
    private javax.swing.JLabel lbDanhSachPN;
    private javax.swing.JLabel lbMaPN;
    private javax.swing.JLabel lbNgayLapPhieu;
    private javax.swing.JLabel lbNhanVien;
    private javax.swing.JLabel lbQuanLyNhanVien;
    private javax.swing.JLabel lbTimKiem;
    private javax.swing.JLabel lbTimKiemSP;
    private javax.swing.JLabel lbTongSLNhap;
    private javax.swing.JPanel pnQuanLyPhieuNhap;
    private javax.swing.JPanel pnThemPhieuNhap;
    private javax.swing.JTable tblCTNH;
    private javax.swing.JTable tblCTPN;
    private javax.swing.JTable tblDSPN;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txfMaPN;
    private javax.swing.JTextField txfNgayLapPhieu;
    private javax.swing.JTextField txfNhanVien;
    private javax.swing.JTextField txfTimKiem;
    private javax.swing.JTextField txfTimKiemSP;
    private javax.swing.JTextField txfTongSLNhap;
    // End of variables declaration//GEN-END:variables
}
